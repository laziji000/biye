{"ast":null,"code":"import shrinkableMenu from \"./main-components/shrinkable-menu/shrinkable-menu.vue\";\nimport tagsPageOpened from \"./main-components/tags-page-opened.vue\";\nimport breadcrumbNav from \"./main-components/breadcrumb-nav.vue\";\nimport fullScreen from \"./main-components/fullscreen.vue\";\nimport lockScreen from \"./main-components/lockscreen/lockscreen.vue\";\nimport circleLoading from \"@/views/template/circle-loading.vue\";\nimport Cookies from \"js-cookie\";\nimport util from \"@/libs/util.js\";\nexport default {\n  components: {\n    shrinkableMenu,\n    tagsPageOpened,\n    breadcrumbNav,\n    fullScreen,\n    lockScreen,\n    circleLoading\n  },\n  data() {\n    return {\n      sliceNum: 3,\n      shrink: false,\n      username: \"\",\n      userId: \"\",\n      isFullScreen: false,\n      openedSubmenuArr: this.$store.state.app.openedSubmenuArr,\n      lastNav: [],\n      navType: 1\n    };\n  },\n  computed: {\n    loading() {\n      return this.$store.state.app.loading;\n    },\n    navList() {\n      return this.$store.state.app.navList;\n    },\n    currNav() {\n      return this.$store.state.app.currNav;\n    },\n    currNavTitle() {\n      return this.$store.state.app.currNavTitle;\n    },\n    menuList() {\n      return this.$store.state.app.menuList;\n    },\n    pageTagsList() {\n      return this.$store.state.app.pageOpenedList; // 打开的页面的页面对象\n    },\n\n    currentPath() {\n      return this.$store.state.app.currentPath; // 当前面包屑数组\n    },\n\n    avatarPath() {\n      return localStorage.avatorImgPath;\n    },\n    cachePage() {\n      return this.$store.state.app.cachePage;\n    },\n    lang() {\n      return this.$store.state.app.lang;\n    },\n    menuTheme() {\n      return this.$store.state.app.menuTheme;\n    },\n    mesCount() {\n      return this.$store.state.app.messageCount;\n    }\n  },\n  methods: {\n    init() {\n      // 菜单\n      let pathArr = util.setCurrentPath(this, this.$route.name);\n      // this.$store.commit(\"updateMenulist\");\n      if (pathArr.length >= 2) {\n        this.$store.commit(\"addOpenSubmenu\", pathArr[1].name);\n      }\n      let userInfo = JSON.parse(Cookies.get(\"userInfo\"));\n      console.log(\"当前登录者的信息：\", userInfo);\n      this.username = userInfo.nickname;\n      this.userId = userInfo.id;\n      this.checkTag(this.$route.name);\n      let currWidth = document.body.clientWidth;\n      if (currWidth <= 1200) {\n        this.sliceNum = 2;\n      }\n    },\n    selectNav(name) {\n      this.$store.commit(\"setCurrNav\", name);\n      this.setStore(\"currNav\", name);\n      // 清空所有已打开标签\n      this.$store.commit(\"clearAllTags\");\n      if (this.$route.name != \"home_index\") {\n        this.$router.push({\n          name: \"home_index\"\n        });\n      }\n      util.initRouter(this);\n    },\n    toggleClick() {\n      this.shrink = !this.shrink;\n    },\n    handleClickUserDropdown(name) {\n      if (name == \"ownSpace\") {\n        util.openNewPage(this, \"my_home_index\");\n        this.$router.push({\n          name: \"my_home_index\"\n        });\n      } else if (name == \"changePass\") {\n        util.openNewPage(this, \"password\");\n        this.$router.push({\n          name: \"password\"\n        });\n      } else if (name == \"loginout\") {\n        // 退出登录\n        this.$store.commit(\"setLoading\", false);\n        this.$store.commit(\"setLoading\", true);\n        this.$store.commit(\"logout\", this);\n        this.$store.commit(\"clearOpenedSubmenu\");\n        this.setStore(\"accessToken\", \"\");\n        // 强制刷新页面 重新加载router\n        location.reload();\n      }\n    },\n    checkTag(name) {\n      let openpageHasTag = this.pageTagsList.some(item => {\n        if (item.name == name) {\n          return true;\n        }\n      });\n      if (!openpageHasTag) {\n        //  解决关闭当前标签后再点击回退按钮会退到当前页时没有标签的问题\n        util.openNewPage(this, name, this.$route.params || {}, this.$route.query || {});\n      }\n    },\n    handleSubmenuChange(val) {},\n    beforePush(name) {\n      return true;\n    },\n    fullscreenChange(isFullScreen) {},\n    resize() {\n      let currWidth = document.body.clientWidth;\n      if (currWidth <= 1200 && currWidth > 900) {\n        this.sliceNum = 2;\n        this.shrink = true;\n      } else if (currWidth <= 900) {\n        this.sliceNum = 1;\n        this.shrink = true;\n      } else {\n        this.sliceNum = 3;\n        this.shrink = false;\n      }\n    }\n  },\n  watch: {\n    $route(to) {\n      this.$store.commit(\"setCurrentPageName\", to.name);\n      let pathArr = util.setCurrentPath(this, to.name);\n      if (pathArr.length > 2) {\n        this.$store.commit(\"addOpenSubmenu\", pathArr[1].name);\n      }\n      this.checkTag(to.name);\n      localStorage.currentPageName = to.name;\n    },\n    lang() {\n      util.setCurrentPath(this, this.$route.name); // 在切换语言时用于刷新面包屑\n    }\n  },\n\n  mounted() {\n    this.init();\n    let that = this;\n    this.resize();\n    window.addEventListener(\"resize\", function () {\n      that.resize();\n    });\n  },\n  created() {\n    // 显示打开的页面的列表\n    this.$store.commit(\"setOpenedList\");\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}