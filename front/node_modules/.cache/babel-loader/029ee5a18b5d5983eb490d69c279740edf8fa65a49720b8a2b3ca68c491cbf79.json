{"ast":null,"code":"import { getLogListData } from \"./api.js\";\nexport default {\n  name: \"logLook\",\n  data() {\n    return {\n      // 日志表的列\n      columns: [{\n        title: \"序号\",\n        type: \"index\",\n        minWidth: 80,\n        align: \"center\",\n        fixed: \"left\"\n      }, {\n        title: \"操作名称\",\n        key: \"name\",\n        minWidth: 120,\n        sortable: true,\n        fixed: \"left\",\n        tooltip: true,\n        align: \"center\",\n        render: (h, params) => {\n          return h(\"div\", [h(\"Tag\", {\n            props: {\n              color: \"purple\",\n              size: \"medium\"\n            }\n          }, params.row.name)]);\n        }\n      }, {\n        title: \"操作者\",\n        key: \"username\",\n        minWidth: 100,\n        sortable: true,\n        fixed: \"left\",\n        align: \"center\",\n        tooltip: true\n      }, {\n        title: \"秒耗时\",\n        key: \"costTime\",\n        minWidth: 150,\n        sortable: true,\n        align: \"center\",\n        tooltip: true,\n        render: (h, params) => {\n          return h(\"div\", [h(\"Tag\", {\n            props: {\n              color: params.row.costTime > 500 ? \"red\" : \"green\",\n              size: \"medium\"\n            }\n          }, params.row.costTime / 1000)]);\n        }\n      }, {\n        title: \"请求类型\",\n        key: \"requestType\",\n        minWidth: 130,\n        align: \"center\",\n        sortable: true,\n        tooltip: true,\n        render: (h, params) => {\n          if (params.row.requestType === \"GET\") {\n            return h(\"div\", [h(\"Tag\", {\n              props: {\n                color: \"magenta\",\n                size: \"medium\"\n              }\n            }, params.row.requestType)]);\n          } else if (params.row.requestType === \"POST\") {\n            return h(\"div\", [h(\"Tag\", {\n              props: {\n                color: \"orange\",\n                size: \"medium\"\n              }\n            }, params.row.requestType)]);\n          } else {\n            return h(\"div\", [params.row.requestType]);\n          }\n        }\n      }, {\n        title: \"请求路径\",\n        minWidth: 120,\n        key: \"requestUrl\",\n        align: \"center\",\n        tooltip: true\n      }, {\n        title: \"请求参数\",\n        minWidth: 120,\n        key: \"requestParam\",\n        tooltip: true,\n        align: \"center\"\n      }, {\n        title: \"操作者IP\",\n        key: \"ip\",\n        minWidth: 150,\n        sortable: true,\n        align: \"center\",\n        tooltip: true\n      }, {\n        title: \"IP定位\",\n        key: \"ipInfo\",\n        minWidth: 150,\n        align: \"center\",\n        sortable: true,\n        tooltip: true\n      }, {\n        title: \"操作设备\",\n        key: \"device\",\n        minWidth: 150,\n        align: \"center\",\n        sortable: true,\n        tooltip: true\n      }, {\n        title: \"接口编码\",\n        key: \"doType\",\n        minWidth: 120,\n        sortable: true,\n        align: \"center\",\n        tooltip: true\n      }, {\n        title: \"操作时间\",\n        key: \"createTime\",\n        sortable: true,\n        minWidth: 220,\n        align: \"center\",\n        sortType: \"desc\",\n        fixed: \"right\",\n        tooltip: true\n      }],\n      // 列筛选\n      selected: [\"序号\", \"操作名称\", \"操作者\", \"秒耗时\", \"请求类型\", \"请求路径\", \"请求参数\", \"操作者IP\", \"IP定位\", \"操作设备\", \"接口编码\", \"操作时间\"],\n      tableHeight: 0,\n      modal1: false,\n      tabName: \"\",\n      loading: true,\n      selectList: [],\n      selectRow: 0,\n      selectDate: null,\n      searchKey: \"\",\n      searchForm: {\n        logType: \"1\",\n        pageNumber: 1,\n        pageSize: 15,\n        startDate: \"\",\n        endDate: \"\",\n        sort: \"createTime\",\n        order: \"desc\",\n        ipInfo: \"\"\n      },\n      data: [],\n      total: 0,\n      showFilterPanelFlag: false\n    };\n  },\n  methods: {\n    openMessageModel() {\n      this.$Message.info(\"这是一条日志!\");\n    },\n    handleContextMenu(row) {\n      this.selectRow = row;\n    },\n    // 顶部标签切换\n    changeTab(v) {\n      this.searchForm.logType = v;\n      this.getLogList();\n    },\n    // 切换分页页码\n    changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getLogList();\n    },\n    // 切换每页个数\n    changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getLogList();\n    },\n    // 搜索日志起始时间\n    selectDateRange(v) {\n      if (v) {\n        this.searchForm.startDate = v[0];\n        this.searchForm.endDate = v[1];\n      }\n    },\n    // 表格单击事件\n    rowClick(row, index) {\n      this.selectRow = row;\n    },\n    // 表格样式变化\n    rowClassNmae(row, index) {\n      if (row.id == this.selectRow.id) {\n        return \"rowClassNmaeColor\";\n      }\n      return \"\";\n    },\n    // 搜索\n    handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 20;\n      this.getLogList();\n    },\n    // 查询日志数据\n    getLogList() {\n      this.loading = true;\n      this.searchForm.key = this.searchKey;\n      getLogListData(this.searchForm).then(res => {\n        this.loading = false;\n        if (res.success) {\n          this.data = res.result.records;\n          this.total = res.result.total;\n        }\n      });\n    },\n    // 重置搜索条件\n    handleReset() {\n      this.searchKey = \"\";\n      this.selectDate = null;\n      this.searchForm.startDate = \"\";\n      this.searchForm.endDate = \"\";\n      this.getLogList();\n    },\n    // 切换查询排序规则\n    changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n      if (e.order == \"normal\") {\n        this.searchForm.order = \"\";\n      }\n      this.getLogList();\n    }\n  },\n  mounted() {\n    this.getLogList();\n    // 自适配屏幕高度\n    this.height = window.innerHeight - this.$refs.table.$el.offsetTop - 240;\n    this.tableHeight = Number(window.innerHeight - 320);\n    // 列筛选\n    this.mycolumns = this.columns;\n    let showcolumns = [];\n    for (var i = 0; i < this.selected.length; i++) {\n      var item = this.selected[i];\n      for (var j = 0; j < this.columns.length; j++) {\n        if (this.columns[j].title == item) {\n          showcolumns.push(this.columns[j]);\n        }\n      }\n    }\n    this.columns = showcolumns;\n  },\n  watch: {\n    // 列筛选\n    selected: function (newcolumns) {\n      let showcolumns = [];\n      for (var i = 0; i < this.mycolumns.length; i++) {\n        var item = this.mycolumns[i];\n        if (item.title == undefined) showcolumns.push(item);else if (newcolumns.includes(item.title)) showcolumns.push(item);\n      }\n      this.columns = showcolumns;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}