{"ast":null,"code":"import { getFileListData, copyFile, renameFile, deleteFile, getOneSetting, setOneSetting } from \"./api.js\";\nimport \"viewerjs/dist/viewer.css\";\nimport Viewer from \"viewerjs\";\nvar dp;\nexport default {\n  name: \"oss-manage\",\n  data() {\n    return {\n      filePath: \"\",\n      fileHttp: \"\",\n      fileView: \"\",\n      fileSaveSettingModal: false,\n      accessToken: {},\n      // 上传token鉴权\n      loading: false,\n      // 表单加载状态\n      drop: false,\n      dropDownContent: \"展开\",\n      dropDownIcon: \"ios-arrow-down\",\n      fileType: \"all\",\n      changeFileNameModal: false,\n      // 添加或编辑显示\n      uploadVisible: false,\n      picVisible: false,\n      picTitle: \"\",\n      searchForm: {\n        // 搜索框对应data对象\n        name: \"\",\n        fkey: \"\",\n        type: \"\",\n        pageNumber: 1,\n        // 当前页数\n        pageSize: 15,\n        // 页面大小\n        sort: \"createTime\",\n        // 默认排序字段\n        order: \"desc\",\n        // 默认排序方式\n        startDate: \"\",\n        // 起始时间\n        endDate: \"\" // 终止时间\n      },\n\n      selectDate: null,\n      // 选择日期绑定modal\n      form: {\n        name: \"\",\n        fkey: \"\"\n      },\n      file: {},\n      // 表单验证规则\n      formValidate: {\n        name: [{\n          required: true,\n          message: \"不能为空\",\n          trigger: \"blur\"\n        }],\n        fkey: [{\n          required: true,\n          message: \"不能为空\",\n          trigger: \"blur\"\n        }]\n      },\n      submitLoading: false,\n      selectList: [],\n      selectCount: 0,\n      totalSize: \"\",\n      columns: [{\n        type: \"selection\",\n        width: 60,\n        align: \"center\"\n      }, {\n        type: \"index\",\n        width: 60,\n        align: \"center\"\n      }, {\n        title: \"原文件名\",\n        key: \"name\",\n        minWidth: 130,\n        sortable: true\n      }, {\n        title: \"存储文件名\",\n        key: \"fkey\",\n        minWidth: 165,\n        sortable: true\n      }, {\n        title: \"预览\",\n        key: \"url\",\n        minWidth: 150,\n        align: \"center\",\n        render: (h, params) => {\n          if (params.row.type.includes(\"image\") > 0) {\n            return h(\"img\", {\n              attrs: {\n                src: params.row.url\n              },\n              style: {\n                cursor: \"zoom-in\",\n                width: \"80px\",\n                height: \"60px\",\n                margin: \"10px 0\",\n                \"object-fit\": \"contain\"\n              },\n              on: {\n                click: () => {\n                  this.showPic(params.row);\n                }\n              }\n            });\n          } else if (params.row.type.includes(\"pdf\") > 0) {\n            return h(\"img\", {\n              attrs: {\n                src: require(\"@/assets/pdf.png\")\n              },\n              style: {\n                cursor: \"zoom-in\",\n                width: \"60px\",\n                margin: \"10px 0\",\n                \"object-fit\": \"contain\"\n              },\n              on: {\n                click: () => {\n                  this.showFile(params.row);\n                }\n              }\n            });\n          } else if (params.row.type.includes(\"zip\") > 0 || params.row.type.includes(\"rar\") > 0 || params.row.type.includes(\"7z\") > 0) {\n            return h(\"img\", {\n              attrs: {\n                src: require(\"@/assets/zip.png\")\n              },\n              style: {\n                width: \"60px\",\n                margin: \"10px 0\",\n                \"object-fit\": \"contain\"\n              },\n              on: {\n                click: () => {\n                  this.showFile(params.row);\n                  this.$Message.warning(\"请下载后解压访问!\");\n                }\n              }\n            });\n          } else {\n            return h(\"img\", {\n              attrs: {\n                src: require(\"@/assets/file.png\")\n              },\n              style: {\n                width: \"55px\",\n                height: \"60px\",\n                margin: \"10px 0\",\n                \"object-fit\": \"contain\"\n              },\n              on: {\n                click: () => {\n                  this.showFile(params.row);\n                }\n              }\n            });\n          }\n        }\n      }, {\n        title: \"文件类型\",\n        key: \"type\",\n        minWidth: 115,\n        sortable: true\n      }, {\n        title: \"文件大小\",\n        key: \"size\",\n        minWidth: 115,\n        sortable: true,\n        render: (h, params) => {\n          return h(\"div\", [h(\"Tag\", {\n            props: {\n              color: params.row.size > 1024 * 1024 * 5 ? \"orange\" : \"green\"\n            }\n          }, (params.row.size * 1.0 / (1024 * 1024)).toFixed(2) + \" MB\")]);\n        }\n      }, {\n        title: \"上传者\",\n        key: \"createBy\",\n        minWidth: 120,\n        sortable: true,\n        align: \"center\",\n        render: (h, params) => {\n          return h(\"Tooltip\", {\n            props: {\n              placement: \"top\",\n              content: params.row.createBy\n            }\n          }, [h(\"Tag\", {\n            style: {\n              \"margin-right\": \"8px\"\n            },\n            props: {\n              type: \"border\"\n            }\n          }, params.row.nickname)]);\n        }\n      }, {\n        title: \"上传时间\",\n        key: \"createTime\",\n        minWidth: 180,\n        sortable: true,\n        sortType: \"desc\"\n      }, {\n        title: \"操作\",\n        key: \"action\",\n        align: \"center\",\n        fixed: \"right\",\n        minWidth: 260,\n        render: (h, params) => {\n          var that = this;\n          return h(\"div\", [h(\"Button\", {\n            props: {\n              type: \"success\",\n              size: \"small\",\n              ghost: true,\n              shape: \"circle\"\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: () => {\n                this.download(params.row);\n              }\n            }\n          }, \"下载\"), h(\"Button\", {\n            props: {\n              type: \"warning\",\n              size: \"small\",\n              ghost: true,\n              shape: \"circle\"\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: () => {\n                this.rename(params.row);\n              }\n            }\n          }, \"重命名\"), h(\"Button\", {\n            props: {\n              type: \"info\",\n              size: \"small\",\n              ghost: true,\n              shape: \"circle\"\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: () => {\n                this.copy(params.row);\n              }\n            }\n          }, \"拷贝\"), h(\"Button\", {\n            props: {\n              type: \"error\",\n              size: \"small\",\n              ghost: true,\n              shape: \"circle\",\n              disabled: !(that.$route.meta.permTypes && that.$route.meta.permTypes.includes(\"delete\"))\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: () => {\n                this.remove(params.row);\n              }\n            }\n          }, \"删除\")]);\n        }\n      }],\n      data: [],\n      total: 0\n    };\n  },\n  methods: {\n    init() {\n      var that = this;\n      this.getDataList();\n      this.getFileSettingFx();\n      this.accessToken = {\n        accessToken: this.getStore(\"accessToken\")\n      };\n    },\n    getFileSettingFx() {\n      var that = this;\n      getOneSetting({\n        id: \"FILE_PATH\"\n      }).then(res => {\n        if (res.success) {\n          that.filePath = res.result.value;\n        }\n      });\n      getOneSetting({\n        id: \"FILE_HTTP\"\n      }).then(res => {\n        if (res.success) {\n          that.fileHttp = res.result.value;\n        }\n      });\n      getOneSetting({\n        id: \"FILE_VIEW\"\n      }).then(res => {\n        if (res.success) {\n          that.fileView = res.result.value;\n        }\n      });\n    },\n    setFileSettingFx() {\n      var that = this;\n      setOneSetting({\n        id: \"FILE_PATH\",\n        value: that.filePath\n      }).then(res => {\n        if (res.success) {\n          this.$Message.success(\"存储路径更新成功\");\n        }\n      });\n      setOneSetting({\n        id: \"FILE_HTTP\",\n        value: that.fileHttp\n      }).then(res => {\n        if (res.success) {\n          this.$Message.success(\"HTTP更新成功\");\n        }\n      });\n      setOneSetting({\n        id: \"FILE_VIEW\",\n        value: that.fileView\n      }).then(res => {\n        if (res.success) {\n          this.$Message.success(\"预览接口更新成功\");\n        }\n      });\n    },\n    showPic(v) {\n      let image = new Image();\n      image.src = v.url;\n      let viewer = new Viewer(image, {\n        hidden: function () {\n          viewer.destroy();\n        }\n      });\n      viewer.show();\n    },\n    closeVideo() {\n      dp.destroy();\n    },\n    dropDown() {\n      if (this.drop) {\n        this.dropDownContent = \"展开\";\n        this.dropDownIcon = \"ios-arrow-down\";\n      } else {\n        this.dropDownContent = \"收起\";\n        this.dropDownIcon = \"ios-arrow-up\";\n      }\n      this.drop = !this.drop;\n    },\n    changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getDataList();\n      this.clearSelectAll();\n    },\n    changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getDataList();\n    },\n    changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n      if (e.order == \"normal\") {\n        this.searchForm.order = \"\";\n      }\n      this.getDataList();\n    },\n    selectDateRange(v) {\n      if (v) {\n        this.searchForm.startDate = v[0];\n        this.searchForm.endDate = v[1];\n      }\n    },\n    getDataList() {\n      this.loading = true;\n      getFileListData(this.searchForm).then(res => {\n        this.loading = false;\n        if (res.success) {\n          this.data = res.result.records;\n          this.total = res.result.total;\n        }\n      });\n    },\n    handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 15;\n      this.getDataList();\n    },\n    changeFileType() {\n      let name = this.fileType;\n      if (name == \"all\") {\n        this.searchForm.type = \"\";\n      } else if (name == \"pic\") {\n        this.searchForm.type = \"image\";\n      } else if (name == \"video\") {\n        this.searchForm.type = \"video\";\n      }\n      this.handleSearch();\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 15;\n      this.selectDate = null;\n      this.searchForm.startDate = \"\";\n      this.searchForm.endDate = \"\";\n      this.getDataList();\n    },\n    beforeUpload() {\n      return true;\n    },\n    handleMaxSize(file) {\n      this.$Notice.warning({\n        title: \"文件大小过大\",\n        desc: \"所选文件‘ \" + file.name + \" ’大小过大, 不得超过 5M.\"\n      });\n    },\n    handleSuccess(res, file) {\n      if (res.success) {\n        this.$Message.success(\"上传文件 \" + file.name + \" 成功\");\n        this.getDataList();\n      } else {\n        this.$Message.error(res.message);\n      }\n    },\n    handleError(error, file, fileList) {\n      this.$Message.error(error.toString());\n    },\n    clearFiles() {\n      this.$refs.up.clearFiles();\n    },\n    download(v) {\n      window.open(v.url + \"?attname=&response-content-type=application/octet-stream&filename=\" + v.name);\n    },\n    showFile(v) {\n      window.open(v.url + \"?preview=true\");\n    },\n    copy(v) {\n      this.$Modal.confirm({\n        title: \"确认复制\",\n        content: \"您确认要复制文件 \" + v.name + \" ?\",\n        loading: true,\n        onOk: () => {\n          copyFile({\n            id: v.id,\n            key: v.fkey\n          }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"复制文件成功，新文件名为 \" + v.name + \"_副本\");\n              this.getDataList();\n            }\n          });\n        }\n      });\n    },\n    removeAll() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 个文件?\",\n        loading: true,\n        onOk: () => {\n          let ids = \"\";\n          this.selectList.forEach(function (e) {\n            ids += e.id + \",\";\n          });\n          ids = ids.substring(0, ids.length - 1);\n          deleteFile({\n            ids: ids\n          }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"批量删除文件成功\");\n              this.clearSelectAll();\n              this.getDataList();\n            }\n          });\n        }\n      });\n    },\n    remove(v) {\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除文件 \" + v.name + \" ?\",\n        loading: true,\n        onOk: () => {\n          deleteFile({\n            ids: v.id\n          }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"删除文件 \" + v.name + \" 成功\");\n              this.getDataList();\n            }\n          });\n        }\n      });\n    },\n    handleSubmit() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          this.submitLoading = true;\n          let params = {\n            id: this.form.id,\n            newKey: this.form.fkey,\n            newName: this.form.name\n          };\n          renameFile(params).then(res => {\n            this.submitLoading = false;\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getDataList();\n              this.changeFileNameModal = false;\n            }\n          });\n        }\n      });\n    },\n    rename(v) {\n      for (let attr in v) {\n        if (v[attr] == null) {\n          v[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(v);\n      let data = JSON.parse(str);\n      this.form = data;\n      this.changeFileNameModal = true;\n    },\n    clearSelectAll() {\n      this.$refs.table.selectAll(false);\n      this.totalSize = \"\";\n    },\n    changeSelect(e) {\n      this.selectList = e;\n      this.selectCount = e.length;\n      let size = 0;\n      e.forEach(item => {\n        size += item.size * 1.0;\n      });\n      this.totalSize = (size * 1.0 / (1024 * 1024)).toFixed(2) + \" MB\";\n    }\n  },\n  mounted() {\n    this.init();\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}