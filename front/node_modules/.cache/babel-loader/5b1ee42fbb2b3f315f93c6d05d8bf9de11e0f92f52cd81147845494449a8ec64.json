{"ast":null,"code":"import { regist, drawCodeImage, initCaptcha } from \"@/api/index\";\nimport { validateMobile, validatePassword } from \"@/libs/validate\";\nexport default {\n  components: {},\n  data() {\n    return {\n      captchaId: \"\",\n      captchaImg: \"\",\n      error: false,\n      loading: false,\n      errorCode: \"\",\n      form: {\n        username: \"\",\n        password: \"\",\n        mobile: \"\",\n        code: \"\",\n        captchaId: \"\"\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: \"请输入手机号\",\n          trigger: \"blur\"\n        }, {\n          validator: validateMobile,\n          trigger: \"blur\"\n        }],\n        nickname: [{\n          required: true,\n          message: \"请输入您的姓名\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"请输入登录密码\",\n          trigger: \"blur\"\n        }, {\n          validator: validatePassword,\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    getCaptchaImg() {\n      this.loadingCaptcha = true;\n      initCaptcha().then(res => {\n        this.loadingCaptcha = false;\n        if (res.success) {\n          this.captchaId = res.result;\n          this.captchaImg = drawCodeImage + this.captchaId;\n        }\n      });\n    },\n    submitRegist() {\n      this.form.captchaId = this.captchaId;\n      this.form.mobile = this.form.username;\n      this.$refs.usernameLoginForm.validate(valid => {\n        if (valid) {\n          if (!this.form.code) {\n            this.errorCode = \"验证码不能为空\";\n            return;\n          } else {\n            this.errorCode = \"\";\n          }\n          this.loading = true;\n          regist(this.form).then(res => {\n            this.loading = false;\n            if (res.success) {\n              this.$router.push({\n                name: \"login\"\n              });\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted() {\n    this.getCaptchaImg();\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}