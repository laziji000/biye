{"ast":null,"code":"import { getTeacherList, deleteTeacher } from \"./api.js\";\nimport add from \"./add.vue\";\nimport edit from \"./edit.vue\";\nimport dict from \"@/views/template/dict\";\nimport Viewer from \"viewerjs\";\nexport default {\n  name: \"single-window\",\n  components: {\n    add,\n    edit,\n    dict\n  },\n  data() {\n    return {\n      tableHeight: 0,\n      selected: [\"选择\", \"序号\", \"姓名\", \"学历\", \"年龄\", \"毕业院校\", \"工资\", \"在职状态\", \"签名\", \"个人简历\", \"备注\", \"创建时间\", \"创建者\", \"修改时间\", \"修改者\", \"操作\"],\n      modal1: false,\n      openSearch: true,\n      // 显示搜索\n      openTip: true,\n      // 显示提示\n      formData: {},\n      currView: \"index\",\n      loading: true,\n      // 表单加载状态\n      searchForm: {\n        // 搜索框初始化对象\n        pageNumber: 1,\n        // 当前页数\n        pageSize: 15,\n        // 页面大小\n        sort: \"createTime\",\n        // 默认排序字段\n        order: \"desc\" // 默认排序方式\n      },\n\n      selectList: [],\n      // 多选数据\n      selectCount: 0,\n      // 多选计数\n      selectRow: 0,\n      columns: [\n      // 表头\n      {\n        type: \"selection\",\n        width: 60,\n        title: \"选择\",\n        align: \"center\",\n        fixed: \"left\"\n      }, {\n        title: \"序号\",\n        width: 85,\n        align: \"center\",\n        fixed: \"left\",\n        sortType: true,\n        render: (h, params) => {\n          return h(\"span\", params.index + (this.searchForm.pageNumber - 1) * this.searchForm.pageSize + 1);\n        }\n      }, {\n        title: \"姓名\",\n        key: \"name\",\n        minWidth: 120,\n        tooltip: true,\n        sortable: false\n      }, {\n        title: \"学历\",\n        key: \"education\",\n        minWidth: 120,\n        tooltip: true,\n        sortable: false,\n        render: (h, params) => {\n          if (params.row.education == \"博士\") {\n            return h(\"div\", [h(\"Tag\", {\n              props: {\n                color: \"volcano\"\n              }\n            }, params.row.education)]);\n          } else if (params.row.education == \"硕士\") {\n            return h(\"div\", [h(\"Tag\", {\n              props: {\n                color: \"geekblue\"\n              }\n            }, params.row.education)]);\n          } else if (params.row.education == \"本科\") {\n            return h(\"div\", [h(\"Tag\", {\n              props: {\n                color: \"cyan\"\n              }\n            }, params.row.education)]);\n          } else {\n            return h(\"div\", [params.row.education]);\n          }\n        }\n      }, {\n        title: \"年龄\",\n        key: \"age\",\n        minWidth: 120,\n        tooltip: true,\n        sortable: false\n      }, {\n        title: \"毕业院校\",\n        key: \"graduated\",\n        minWidth: 120,\n        tooltip: true,\n        sortable: false\n      }, {\n        title: \"工资\",\n        key: \"wages\",\n        minWidth: 120,\n        tooltip: true,\n        sortable: false,\n        render: (h, params) => {\n          return h(\"div\", [h(\"span\", {\n            style: {\n              color: params.row.wages < 5000 ? \"#3CB371\" : \"#ff0000\"\n            }\n          }, params.row.wages)]);\n        }\n      }, {\n        title: \"在职状态\",\n        key: \"status\",\n        minWidth: 120,\n        tooltip: true,\n        sortable: false,\n        render: (h, params) => {\n          return h(\"i-switch\", {\n            props: {\n              size: \"large\",\n              value: params.row.status === \"在职\"\n            },\n            scopedSlots: {\n              open: () => h(\"span\", \"在职\"),\n              close: () => h(\"span\", \"离职\")\n            },\n            on: {\n              \"on-change\": value => {\n                // 模拟事件\n                this.$Message.success(params.row.name + \" 模拟事件成功 :\" + value);\n              }\n            }\n          });\n        }\n      }, {\n        title: \"签名\",\n        key: \"autograph\",\n        minWidth: 120,\n        tooltip: true,\n        sortable: false,\n        render: (h, params) => {\n          if (params.row.autograph == undefined || params.row.autograph == \"\") {\n            return h(\"div\", [h(\"span\", {\n              style: {\n                color: \"#ff9900\"\n              }\n            }, \"未上传\")]);\n          } else {\n            return h(\"img\", {\n              attrs: {\n                src: params.row.autograph\n              },\n              style: {\n                cursor: \"zoom-in\",\n                width: \"60px\",\n                margin: \"10px 0\",\n                \"object-fit\": \"contain\"\n              },\n              on: {\n                click: () => {\n                  this.showPic(params.row.autograph);\n                }\n              }\n            });\n          }\n        }\n      }, {\n        title: \"个人简历\",\n        key: \"resume\",\n        minWidth: 120,\n        tooltip: true,\n        sortable: false,\n        render: (h, params) => {\n          if (params.row.resume == undefined || params.row.resume == \"\") {\n            return h(\"div\", [h(\"span\", {\n              style: {\n                color: \"#ff9900\"\n              }\n            }, \"未上传\")]);\n          } else {\n            return h(\"img\", {\n              attrs: {\n                src: require(\"@/assets/pdf.png\")\n              },\n              style: {\n                cursor: \"zoom-in\",\n                width: \"60px\",\n                margin: \"10px 0\",\n                \"object-fit\": \"contain\"\n              },\n              on: {\n                click: () => {\n                  this.showPdf(params.row.resume);\n                }\n              }\n            });\n          }\n        }\n      }, {\n        title: \"备注\",\n        key: \"remark\",\n        minWidth: 120,\n        tooltip: true,\n        sortable: false\n      }, {\n        title: \"创建时间\",\n        key: \"createTime\",\n        sortable: true,\n        sortType: \"desc\",\n        minWidth: 180,\n        align: \"center\",\n        tooltip: true\n      }, {\n        title: \"创建者\",\n        key: \"createBy\",\n        sortable: true,\n        sortType: \"desc\",\n        minWidth: 100,\n        align: \"center\",\n        tooltip: true\n      }, {\n        title: \"修改时间\",\n        key: \"updateTime\",\n        minWidth: 180,\n        align: \"center\",\n        tooltip: true\n      }, {\n        title: \"修改者\",\n        key: \"updateBy\",\n        minWidth: 100,\n        align: \"center\",\n        tooltip: true\n      }, {\n        title: \"操作\",\n        key: \"action\",\n        align: \"center\",\n        width: 200,\n        fixed: \"right\",\n        render: (h, params) => {\n          return h(\"div\", [h(\"Button\", {\n            props: {\n              type: \"primary\",\n              size: \"small\",\n              icon: \"ios-create-outline\",\n              ghost: true\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: () => {\n                this.edit(params.row);\n              }\n            }\n          }, \"编辑\"), h(\"Button\", {\n            props: {\n              type: \"error\",\n              size: \"small\",\n              icon: \"md-trash\",\n              ghost: true\n            },\n            on: {\n              click: () => {\n                this.remove(params.row);\n              }\n            }\n          }, \"删除\")]);\n        }\n      }],\n      data: [],\n      // 表单数据\n      pageNumber: 1,\n      // 当前页数\n      pageSize: 10,\n      // 页面大小\n      total: 0,\n      // 表单数据总数\n      showFilterPanelFlag: false\n    };\n  },\n  methods: {\n    init() {\n      this.getDataList();\n    },\n    showPic(e) {\n      let image = new Image();\n      image.src = e;\n      let viewer = new Viewer(image, {\n        hidden: function () {\n          viewer.destroy();\n        }\n      });\n      viewer.show();\n    },\n    showPdf(e) {\n      window.open(e + \"?preview=true\");\n    },\n    submited() {\n      this.currView = \"index\";\n      this.getDataList();\n    },\n    changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getDataList();\n      this.clearSelectAll();\n    },\n    changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getDataList();\n    },\n    rowClick(row, index) {\n      this.selectRow = row;\n    },\n    rowClassNmae(row, index) {\n      if (row.id == this.selectRow.id) {\n        return \"rowClassNmaeColor\";\n      }\n      return \"\";\n    },\n    excelData() {\n      this.$refs.table.exportCsv({\n        filename: \"导出结果\"\n      });\n    },\n    handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 15;\n      this.getDataList();\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 15;\n      this.getDataList();\n    },\n    changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n      if (e.order === \"normal\") {\n        this.searchForm.order = \"\";\n      }\n      this.getDataList();\n    },\n    clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    changeSelect(e) {\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    getDataList() {\n      this.loading = true;\n      getTeacherList(this.searchForm).then(res => {\n        this.loading = false;\n        if (res.success) {\n          this.data = res.result.records;\n          this.total = res.result.total;\n        }\n      });\n    },\n    add() {\n      this.currView = \"add\";\n    },\n    edit(v) {\n      for (let attr in v) {\n        if (v[attr] == null) {\n          v[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(v);\n      let data = JSON.parse(str);\n      this.formData = data;\n      this.currView = \"edit\";\n    },\n    remove(v) {\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除 \" + v.name + \" ?\",\n        loading: true,\n        onOk: () => {\n          deleteTeacher({\n            ids: v.id\n          }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getDataList();\n            }\n          });\n        }\n      });\n    },\n    delAll() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        loading: true,\n        onOk: () => {\n          let ids = \"\";\n          this.selectList.forEach(function (e) {\n            ids += e.id + \",\";\n          });\n          ids = ids.substring(0, ids.length - 1);\n          deleteTeacher({\n            ids: ids\n          }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.clearSelectAll();\n              this.getDataList();\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted() {\n    this.init();\n    this.tableHeight = Number(window.innerHeight - 320);\n    this.mycolumns = this.columns;\n    let showcolumns = [];\n    for (var i = 0; i < this.selected.length; i++) {\n      var item = this.selected[i];\n      for (var j = 0; j < this.columns.length; j++) {\n        if (this.columns[j].title == item) {\n          showcolumns.push(this.columns[j]);\n        }\n      }\n    }\n    this.columns = showcolumns;\n  },\n  watch: {\n    selected: function (newcolumns) {\n      let showcolumns = [];\n      for (var i = 0; i < this.mycolumns.length; i++) {\n        var item = this.mycolumns[i];\n        if (item.title == undefined) showcolumns.push(item);else if (newcolumns.includes(item.title)) showcolumns.push(item);\n      }\n      this.columns = showcolumns;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}