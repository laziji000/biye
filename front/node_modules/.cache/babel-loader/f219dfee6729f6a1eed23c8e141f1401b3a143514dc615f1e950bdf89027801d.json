{"ast":null,"code":"import { getRoleList, getAllPermissionList, addRole, editRole, deleteRole, setDefaultRole, editRolePerm } from \"./api.js\";\nimport util from \"@/libs/util.js\";\nexport default {\n  name: \"role\",\n  data() {\n    return {\n      loading: true,\n      treeLoading: true,\n      submitPermLoading: false,\n      modalType: 0,\n      roleModalVisible: false,\n      permModalVisible: false,\n      modalTitle: \"\",\n      roleForm: {\n        name: \"\",\n        description: \"\"\n      },\n      roleFormValidate: {\n        name: [{\n          required: true,\n          message: \"角色名称不能为空\",\n          trigger: \"blur\"\n        }]\n      },\n      submitLoading: false,\n      columns: [{\n        type: \"index\",\n        width: 60,\n        align: \"center\"\n      }, {\n        title: \"角色名称\",\n        key: \"name\",\n        minWidth: 150,\n        sortable: true\n      }, {\n        title: \"备注\",\n        key: \"description\",\n        minWidth: 260,\n        sortable: true\n      }, {\n        title: \"创建时间\",\n        key: \"createTime\",\n        minWidth: 170,\n        sortable: true,\n        sortType: \"desc\"\n      }, {\n        title: \"创建人\",\n        key: \"createBy\",\n        minWidth: 170,\n        sortable: true,\n        sortType: \"desc\"\n      }, {\n        title: \"更新时间\",\n        key: \"updateTime\",\n        minWidth: 170,\n        sortable: true\n      }, {\n        title: \"最后更新人\",\n        key: \"updateBy\",\n        minWidth: 170,\n        sortable: true\n      }, {\n        title: \"操作\",\n        key: \"action\",\n        align: \"center\",\n        fixed: \"right\",\n        width: 380,\n        render: (h, params) => {\n          var that = this;\n          return h(\"div\", [h(\"Button\", {\n            props: {\n              type: \"success\",\n              size: \"small\",\n              ghost: true,\n              shape: \"circle\",\n              icon: \"ios-brush\",\n              disabled: !(that.$route.meta.permTypes && that.$route.meta.permTypes.includes(\"enable\"))\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: () => {\n                this.editPerm(params.row);\n              }\n            }\n          }, \"菜单权限\"), h(\"Button\", {\n            props: {\n              type: params.row.defaultRole ? \"primary\" : \"info\",\n              size: \"small\",\n              ghost: true,\n              shape: \"circle\",\n              icon: \"ios-browsers\"\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: () => {\n                if (params.row.defaultRole) {\n                  this.cancelDefault(params.row);\n                } else {\n                  this.setDefault(params.row);\n                }\n              }\n            }\n          }, params.row.defaultRole ? \"取消默认\" : \"设为默认\"), h(\"Button\", {\n            props: {\n              type: \"warning\",\n              size: \"small\",\n              ghost: true,\n              shape: \"circle\",\n              icon: \"md-color-wand\",\n              disabled: !(that.$route.meta.permTypes && that.$route.meta.permTypes.includes(\"edit\"))\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: () => {\n                this.edit(params.row);\n              }\n            }\n          }, \"编辑\"), h(\"Button\", {\n            props: {\n              type: \"error\",\n              size: \"small\",\n              ghost: true,\n              shape: \"circle\",\n              icon: \"ios-undo\",\n              disabled: !(that.$route.meta.permTypes && that.$route.meta.permTypes.includes(\"delete\"))\n            },\n            on: {\n              click: () => {\n                this.remove(params.row);\n              }\n            }\n          }, \"删除\")]);\n        }\n      }],\n      data: [],\n      total: 0,\n      permData: [],\n      editRolePermId: \"\",\n      searchForm: {\n        // 搜索框初始化对象\n        pageNumber: 1,\n        // 当前页数\n        pageSize: 15,\n        // 页面大小\n        sort: \"createTime\",\n        // 默认排序字段\n        order: \"desc\" // 默认排序方式\n      }\n    };\n  },\n\n  methods: {\n    init() {\n      this.getRoleList();\n      this.getPermList();\n    },\n    renderContent(h, {\n      root,\n      node,\n      data\n    }) {\n      let icon = \"\";\n      if (data.level == 0) {\n        icon = \"ios-navigate\";\n      } else if (data.level == 1) {\n        icon = \"md-list-box\";\n      } else if (data.level == 2) {\n        icon = \"md-list\";\n      } else if (data.level == 3) {\n        icon = \"md-radio-button-on\";\n      } else {\n        icon = \"md-radio-button-off\";\n      }\n      return h(\"span\", {\n        style: {\n          display: \"inline-block\",\n          cursor: \"pointer\"\n        },\n        on: {\n          click: () => {\n            data.checked = !data.checked;\n          }\n        }\n      }, [h(\"span\", [h(\"Icon\", {\n        props: {\n          type: icon,\n          size: \"16\"\n        },\n        style: {\n          \"margin-right\": \"8px\",\n          \"margin-bottom\": \"3px\"\n        }\n      }), h(\"span\", data.title)])]);\n    },\n    changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getRoleList();\n    },\n    changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getRoleList();\n    },\n    changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n      if (e.order === \"normal\") {\n        this.searchForm.order = \"\";\n      }\n      this.getRoleList();\n    },\n    getRoleList() {\n      this.loading = true;\n      getRoleList(this.searchForm).then(res => {\n        this.loading = false;\n        if (res.success) {\n          this.data = res.result.records;\n          this.total = res.result.total;\n        }\n      });\n    },\n    getPermList() {\n      this.treeLoading = true;\n      getAllPermissionList().then(res => {\n        if (res.success) {\n          this.deleteDisableNode(res.result);\n          this.permData = res.result;\n          this.treeLoading = false;\n        }\n        this.treeLoading = false;\n      });\n    },\n    // 递归标记禁用节点\n    deleteDisableNode(permData) {\n      let that = this;\n      permData.forEach(function (e) {\n        if (e.status == -1) {\n          e.title = \"[已禁用] \" + e.title;\n          e.disabled = true;\n        }\n        if (e.children && e.children.length > 0) {\n          that.deleteDisableNode(e.children);\n        }\n      });\n    },\n    cancelRole() {\n      this.roleModalVisible = false;\n    },\n    submitRole() {\n      this.$refs.roleForm.validate(valid => {\n        if (valid) {\n          if (this.modalType == 0) {\n            // 添加\n            this.submitLoading = true;\n            addRole(this.roleForm).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getRoleList();\n                this.roleModalVisible = false;\n              }\n            });\n          } else {\n            this.submitLoading = true;\n            delete this.roleForm.permissions;\n            editRole(this.roleForm).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getRoleList();\n                this.roleModalVisible = false;\n              }\n            });\n          }\n        }\n      });\n    },\n    addRoleFx() {\n      this.modalType = 0;\n      this.modalTitle = \"添加角色\";\n      this.$refs.roleForm.resetFields();\n      delete this.roleForm.id;\n      this.roleModalVisible = true;\n    },\n    edit(v) {\n      this.modalType = 1;\n      this.modalTitle = \"编辑角色\";\n      this.$refs.roleForm.resetFields();\n      for (let attr in v) {\n        if (v[attr] == null) {\n          v[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(v);\n      let roleInfo = JSON.parse(str);\n      this.roleForm = roleInfo;\n      this.roleModalVisible = true;\n    },\n    remove(v) {\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除角色 \" + v.name + \" ?\",\n        loading: true,\n        onOk: () => {\n          deleteRole({\n            ids: v.id\n          }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"删除成功\");\n              this.getRoleList();\n            }\n          });\n        }\n      });\n    },\n    setDefault(v) {\n      this.$Modal.confirm({\n        title: \"确认设置\",\n        content: \"您确认要设置所选的 \" + v.name + \" 为注册用户默认角色?\",\n        loading: true,\n        onOk: () => {\n          let params = {\n            id: v.id,\n            isDefault: true\n          };\n          setDefaultRole(params).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getRoleList();\n            }\n          });\n        }\n      });\n    },\n    cancelDefault(v) {\n      this.$Modal.confirm({\n        title: \"确认取消\",\n        content: \"您确认要取消所选的 \" + v.name + \" 角色为默认?\",\n        loading: true,\n        onOk: () => {\n          let params = {\n            id: v.id,\n            isDefault: false\n          };\n          setDefaultRole(params).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getRoleList();\n            }\n          });\n        }\n      });\n    },\n    editPerm(v) {\n      this.editRolePermId = v.id;\n      this.modalTitle = v.name + \" 菜单权限修改\";\n      let rolePerms = v.permissions;\n      if (this.treeLoading) {\n        this.$Message.warning(\"菜单权限数据加载中，请稍后点击查看\");\n        return;\n      }\n      this.checkPermTree(this.permData, rolePerms);\n      this.permModalVisible = true;\n    },\n    // 递归判断子节点\n    checkPermTree(permData, rolePerms) {\n      let that = this;\n      permData.forEach(function (p) {\n        if (that.hasPerm(p, rolePerms) && p.status != -1) {\n          p.checked = true;\n        } else {\n          p.checked = false;\n        }\n        if (p.children && p.children.length > 0) {\n          that.checkPermTree(p.children, rolePerms);\n        }\n      });\n    },\n    // 判断角色拥有的权限节点勾选\n    hasPerm(p, rolePerms) {\n      let flag = false;\n      for (let i = 0; i < rolePerms.length; i++) {\n        if (p.id == rolePerms[i].permissionId) {\n          flag = true;\n          break;\n        }\n      }\n      if (flag) {\n        return true;\n      }\n      return false;\n    },\n    // 递归全选节点\n    selectedTreeAll(permData, select) {\n      let that = this;\n      permData.forEach(function (e) {\n        e.checked = select;\n        if (e.children && e.children.length > 0) {\n          that.selectedTreeAll(e.children, select);\n        }\n      });\n    },\n    submitPermEdit() {\n      this.submitPermLoading = true;\n      let permIds = \"\";\n      let selectedNodes = this.$refs.tree.getCheckedNodes();\n      selectedNodes.forEach(function (e) {\n        permIds += e.id + \",\";\n      });\n      permIds = permIds.substring(0, permIds.length - 1);\n      editRolePerm({\n        roleId: this.editRolePermId,\n        permIds: permIds\n      }).then(res => {\n        this.submitPermLoading = false;\n        if (res.success) {\n          this.$Message.success(\"操作成功\");\n          this.$store.commit(\"setAdded\", false);\n          util.initRouter(this);\n          this.getRoleList();\n          this.permModalVisible = false;\n        }\n      });\n    },\n    cancelPermEdit() {\n      this.permModalVisible = false;\n    }\n  },\n  mounted() {\n    this.init();\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}