{"ast":null,"code":"import { Pie, measureTextWidth } from '@antv/g2plot';\nimport { getAntvVoList } from './api.js';\nexport default {\n  name: \"test-page\",\n  components: {},\n  props: {},\n  data() {\n    return {\n      depCountData: [{\n        title: '零食类',\n        value: 27\n      }, {\n        title: '冷冻类',\n        value: 25\n      }, {\n        title: '烟酒类',\n        value: 18\n      }, {\n        title: '生鲜类',\n        value: 15\n      }, {\n        title: '散装类',\n        value: 10\n      }, {\n        title: '水果类',\n        value: 5\n      }],\n      piePlot: {}\n    };\n  },\n  methods: {\n    init() {\n      this.initAntvFx();\n      this.getAntvVoListFx();\n    },\n    getAntvVoListFx() {\n      var that = this;\n      getAntvVoList().then(res => {\n        if (res.success) {\n          that.piePlot.changeData(res.result);\n        }\n      });\n    },\n    renderStatistic(containerWidth, text, style) {\n      const {\n        width: textWidth,\n        height: textHeight\n      } = measureTextWidth(text, style);\n      const R = containerWidth / 2;\n      let scale = 1;\n      if (containerWidth < textWidth) {\n        scale = Math.min(Math.sqrt(Math.abs(Math.pow(R, 2) / (Math.pow(textWidth / 2, 2) + Math.pow(textHeight, 2)))), 1);\n      }\n      const textStyleStr = `width:${containerWidth}px;`;\n      return `<div style=\"${textStyleStr};font-size:${scale}em;line-height:${scale < 1 ? 1 : 'inherit'};\">${text}</div>`;\n    },\n    initAntvFx() {\n      var that = this;\n      var data = this.depCountData;\n      this.piePlot = new Pie('container', {\n        appendPadding: 10,\n        data,\n        angleField: 'value',\n        colorField: 'title',\n        radius: 1,\n        innerRadius: 0.64,\n        meta: {\n          value: {\n            formatter: v => `${v} `\n          }\n        },\n        label: {\n          type: 'inner',\n          offset: '-50%',\n          style: {\n            textAlign: 'center'\n          },\n          autoRotate: false,\n          content: '{value}'\n        },\n        statistic: {\n          title: {\n            offsetY: -4,\n            customHtml: (container, view, datum) => {\n              const {\n                width,\n                height\n              } = container.getBoundingClientRect();\n              const d = Math.sqrt(Math.pow(width / 2, 2) + Math.pow(height / 2, 2));\n              const text = datum ? datum.title : '教师工资分布图';\n              return that.renderStatistic(d, text, {\n                fontSize: 28\n              });\n            }\n          },\n          content: {\n            offsetY: 4,\n            style: {\n              fontSize: '32px'\n            },\n            customHtml: (container, view, datum, data) => {\n              const {\n                width\n              } = container.getBoundingClientRect();\n              const text = datum ? ` ${datum.value}元` : ` ${data.reduce((r, d) => r + d.value, 0)}元`;\n              return that.renderStatistic(width, text, {\n                fontSize: 32\n              });\n            }\n          }\n        },\n        // 添加 中心统计文本 交互\n        interactions: [{\n          type: 'element-selected'\n        }, {\n          type: 'element-active'\n        }, {\n          type: 'pie-statistic-active'\n        }]\n      });\n      this.piePlot.render();\n      this.piePlot.on('element:click', args => {\n        that.getPieUserItemFx(args.data.data.title);\n      });\n    }\n  },\n  mounted() {\n    this.init();\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}