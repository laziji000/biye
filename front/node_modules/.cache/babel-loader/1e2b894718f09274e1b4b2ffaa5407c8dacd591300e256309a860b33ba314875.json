{"ast":null,"code":"import { getAllDictList, addDict, editDict, deleteDict, searchDict, getAllDictDataList, addDictData, editDictData, deleteData } from \"./api.js\";\nexport default {\n  name: \"dic-manage\",\n  data() {\n    return {\n      selected: [\"选择\", \"编号\", \"所属字典\", \"键\", \"值\", \"描述\", \"排序\", \"是否禁用\", \"操作\"],\n      treeLoading: false,\n      // 树加载状态\n      maxHeight: \"500px\",\n      loading: false,\n      // 表格加载状态\n      editTitle: \"\",\n      // 编辑节点名称\n      searchKey: \"\",\n      // 搜索树\n      expand: true,\n      span: 18,\n      expandIcon: \"md-arrow-round-back\",\n      selectNode: {},\n      treeData: [],\n      // 树数据\n      selectCount: 0,\n      // 多选计数\n      selectList: [],\n      // 多选数据\n      searchForm: {\n        // 搜索框对应data对象\n        name: \"\",\n        status: \"\",\n        pageNumber: 1,\n        // 当前页数\n        pageSize: 10,\n        // 页面大小\n        sort: \"sortOrder\",\n        // 默认排序字段\n        order: \"asc\" // 默认排序方式\n      },\n\n      modalType: 0,\n      // 添加或编辑标识\n      modalVisible: false,\n      // 添加或编辑显示\n      dictModalVisible: false,\n      dictModalTitle: \"\",\n      modalTitle: \"\",\n      // 添加或编辑标题\n      dictForm: {\n        title: \"\",\n        type: \"\",\n        description: \"\",\n        sortOrder: 0\n      },\n      form: {\n        // 添加或编辑表单对象初始化数据\n        title: \"\",\n        value: \"\",\n        status: 0,\n        description: \"\",\n        sortOrder: 0\n      },\n      dictFormValidate: {\n        // 表单验证规则\n        title: [{\n          required: true,\n          message: \"不能为空\",\n          trigger: \"blur\"\n        }],\n        type: [{\n          required: true,\n          message: \"不能为空\",\n          trigger: \"blur\"\n        }],\n        sortOrder: [{\n          required: true,\n          type: \"number\",\n          message: \"排序值不能为空\",\n          trigger: \"blur\"\n        }]\n      },\n      formValidate: {\n        // 表单验证规则\n        title: [{\n          required: true,\n          message: \"不能为空\",\n          trigger: \"blur\"\n        }],\n        value: [{\n          required: true,\n          message: \"不能为空\",\n          trigger: \"blur\"\n        }],\n        sortOrder: [{\n          required: true,\n          type: \"number\",\n          message: \"排序值不能为空\",\n          trigger: \"blur\"\n        }]\n      },\n      columns: [{\n        title: \"选择\",\n        type: \"selection\",\n        minWidth: 60,\n        align: \"center\"\n      }, {\n        title: \"编号\",\n        type: \"index\",\n        minWidth: 90,\n        align: \"center\"\n      }, {\n        title: \"所属字典\",\n        key: \"dictName\",\n        minWidth: 120,\n        sortable: true\n      }, {\n        title: \"键\",\n        key: \"title\",\n        minWidth: 180,\n        sortable: true\n      }, {\n        title: \"值\",\n        key: \"value\",\n        minWidth: 180,\n        sortable: true\n      }, {\n        title: \"描述\",\n        key: \"description\",\n        minWidth: 120,\n        sortable: true\n      }, {\n        title: \"排序\",\n        key: \"sortOrder\",\n        minWidth: 90,\n        sortable: true,\n        sortType: \"asc\"\n      }, {\n        title: \"是否禁用\",\n        key: \"status\",\n        align: \"center\",\n        minWidth: 120,\n        render: (h, params) => {\n          return h(\"div\", [h(\"Tag\", {\n            props: {\n              color: params.row.status == 0 ? \"green\" : \"red\",\n              size: \"medium\"\n            }\n          }, params.row.status == 0 ? \"启用\" : \"禁用\")]);\n        }\n      }, {\n        title: \"创建时间\",\n        key: \"createTime\",\n        minWidth: 180,\n        sortable: true\n      }, {\n        title: \"操作\",\n        key: \"action\",\n        width: 180,\n        align: \"center\",\n        fixed: \"right\",\n        render: (h, params) => {\n          var that = this;\n          return h(\"div\", [h(\"Button\", {\n            props: {\n              type: \"primary\",\n              size: \"small\",\n              ghost: true,\n              icon: \"ios-brush\",\n              disabled: !(that.$route.meta.permTypes && that.$route.meta.permTypes.includes(\"delete\"))\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: () => {\n                this.edit(params.row);\n              }\n            }\n          }, \"编辑\"), h(\"Button\", {\n            props: {\n              type: \"error\",\n              size: \"small\",\n              ghost: true,\n              icon: \"md-close\",\n              disabled: !(that.$route.meta.permTypes && that.$route.meta.permTypes.includes(\"delete\"))\n            },\n            on: {\n              click: () => {\n                this.remove(params.row);\n              }\n            }\n          }, \"删除\")]);\n        }\n      }],\n      submitLoading: false,\n      // 添加或编辑提交状态\n      data: [],\n      //表单数据\n      total: 0,\n      // 表单数据总数\n      selectRow: {}\n    };\n  },\n  methods: {\n    init() {\n      // 获取树数据\n      this.getAllDict();\n      // 获取表单数据\n      this.getDataList();\n    },\n    rowClick(row, index) {\n      this.selectRow = row;\n    },\n    rowClassName(row, index) {\n      if (row.id == this.selectRow.id) {\n        return \"rowClassNameColor\";\n      }\n      return \"\";\n    },\n    getAllDict() {\n      this.treeLoading = true;\n      getAllDictList().then(res => {\n        this.treeLoading = false;\n        if (res.success) {\n          this.treeData = res.result;\n        }\n      });\n    },\n    search() {\n      // 搜索树\n      if (this.searchKey) {\n        this.treeLoading = true;\n        searchDict({\n          key: this.searchKey\n        }).then(res => {\n          this.treeLoading = false;\n          if (res.success) {\n            this.treeData = res.result;\n          }\n        });\n      } else {\n        // 为空重新加载\n        this.getAllDict();\n      }\n    },\n    selectTree(v) {\n      if (v.length > 0) {\n        this.$refs.dictForm.resetFields();\n        // 转换null为\"\"\n        for (let attr in v[0]) {\n          if (v[0][attr] == null) {\n            v[0][attr] = \"\";\n          }\n        }\n        let str = JSON.stringify(v[0]);\n        let data = JSON.parse(str);\n        this.selectNode = data;\n        this.dictForm = data;\n        this.editTitle = data.title + \"(\" + data.type + \")\";\n        // 重新加载表\n        this.searchForm.pageNumber = 1;\n        this.searchForm.pageSize = 10;\n        this.getDataList();\n      } else {\n        this.cancelEdit();\n      }\n    },\n    cancelEdit() {\n      let data = this.$refs.tree.getSelectedNodes()[0];\n      if (data) {\n        data.selected = false;\n      }\n      // 取消选择后获取全部数据\n      this.selectNode = {};\n      this.editTitle = \"\";\n      this.getDataList();\n    },\n    changeSelect(v) {\n      this.selectCount = v.length;\n      this.selectList = v;\n    },\n    changeExpand() {\n      this.expand = !this.expand;\n      if (this.expand) {\n        this.expandIcon = \"md-arrow-round-back\";\n        this.span = 19;\n      } else {\n        this.expandIcon = \"md-arrow-round-forward\";\n        this.span = 23;\n      }\n    },\n    changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getDataList();\n      this.clearSelectAll();\n    },\n    changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getDataList();\n    },\n    getDataList() {\n      this.loading = true;\n      if (this.selectNode.id) {\n        this.searchForm.dictId = this.selectNode.id;\n      } else {\n        delete this.searchForm.dictId;\n      }\n      if (!this.searchForm.status) {\n        this.searchForm.status = \"\";\n      }\n      getAllDictDataList(this.searchForm).then(res => {\n        this.loading = false;\n        if (res.success) {\n          this.data = res.result.records;\n          this.total = res.result.total;\n        }\n      });\n    },\n    handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.getDataList();\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      // 重新加载数据\n      this.getDataList();\n    },\n    changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n      if (e.order == \"normal\") {\n        this.searchForm.order = \"\";\n      }\n      this.getDataList();\n    },\n    showSelect(e) {\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    refreshDict() {\n      this.getAllDict();\n      this.selectNode = {};\n      this.editTitle = \"\";\n      this.getDataList();\n    },\n    addDcit() {\n      this.modalType = 0;\n      this.dictModalTitle = \"添加字典\";\n      this.$refs.dictForm.resetFields();\n      this.dictModalVisible = true;\n    },\n    editDcit() {\n      this.modalType = 1;\n      this.dictModalTitle = \"编辑字典\";\n      this.dictModalVisible = true;\n    },\n    delDcit() {\n      if (!this.selectNode.id) {\n        this.$Message.warning(\"您还未选择要删除的字典\");\n        return;\n      }\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        loading: true,\n        content: \"您确认要删除 \" + this.selectNode.title + \" ?\",\n        onOk: () => {\n          // 删除\n          deleteDict({\n            ids: this.selectNode.id\n          }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.refreshDict();\n            }\n          });\n        }\n      });\n    },\n    add() {\n      if (!this.selectNode.id) {\n        this.$Message.warning(\"请先选择一个字典类别\");\n        return;\n      }\n      this.modalType = 0;\n      this.modalTitle = \"添加字典 \" + this.editTitle + \" 的数据\";\n      this.$refs.form.resetFields();\n      this.modalVisible = true;\n    },\n    edit(v) {\n      this.modalType = 1;\n      this.modalTitle = \"编辑字典 \" + this.editTitle + \" 的数据\";\n      this.$refs.form.resetFields();\n      // 转换null为\"\"\n      for (let attr in v) {\n        if (v[attr] == null) {\n          v[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(v);\n      let data = JSON.parse(str);\n      this.form = data;\n      this.modalVisible = true;\n    },\n    handelSubmitDict() {\n      this.$refs.dictForm.validate(valid => {\n        if (valid) {\n          this.submitLoading = true;\n          if (this.modalType == 0) {\n            // 添加 避免编辑后传入id等数据 记得删除\n            delete this.dictForm.id;\n            addDict(this.dictForm).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getAllDict();\n                this.dictModalVisible = false;\n              }\n            });\n          } else if (this.modalType == 1) {\n            // 编辑\n            editDict(this.dictForm).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getAllDict();\n                this.dictModalVisible = false;\n              }\n            });\n          }\n        }\n      });\n    },\n    handelSubmit() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          this.submitLoading = true;\n          if (this.modalType == 0) {\n            // 添加 避免编辑后传入id等数据 记得删除\n            delete this.form.id;\n            this.form.dictId = this.selectNode.id;\n            addDictData(this.form).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getDataList();\n                this.modalVisible = false;\n              }\n            });\n          } else if (this.modalType == 1) {\n            // 编辑\n            editDictData(this.form).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getDataList();\n                this.modalVisible = false;\n              }\n            });\n          }\n        }\n      });\n    },\n    remove(v) {\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除 \" + v.title + \" ?\",\n        loading: true,\n        onOk: () => {\n          // 删除\n          deleteData({\n            ids: v.id\n          }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getDataList();\n            }\n          });\n        }\n      });\n    },\n    delAll() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        loading: true,\n        onOk: () => {\n          let ids = \"\";\n          this.selectList.forEach(function (e) {\n            ids += e.id + \",\";\n          });\n          ids = ids.substring(0, ids.length - 1);\n          // 批量删除\n          deleteData({\n            ids: ids\n          }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.clearSelectAll();\n              this.getDataList();\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted() {\n    // 计算高度\n    let height = document.documentElement.clientHeight;\n    this.maxHeight = Number(height - 287) + \"px\";\n    this.init();\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}