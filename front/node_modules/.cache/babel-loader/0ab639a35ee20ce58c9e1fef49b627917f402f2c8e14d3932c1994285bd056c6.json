{"ast":null,"code":"export default {\n  name: \"setPassword\",\n  props: {\n    value: String,\n    size: String,\n    placeholder: {\n      type: String,\n      default: \"请输入密码，长度为6-20个字符\"\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    maxlength: {\n      type: Number,\n      default: 20\n    }\n  },\n  data() {\n    return {\n      currentValue: this.value,\n      tipStyle: \"password-tip-none\",\n      strengthValue: 0,\n      progressStatus: \"normal\",\n      strength: \"无\",\n      grade: 0\n    };\n  },\n  methods: {\n    checkStrengthValue(v) {\n      // 评级制判断密码强度 最高5\n      let grade = 0;\n      if (/\\d/.test(v)) {\n        grade++; //数字\n      }\n\n      if (/[a-z]/.test(v)) {\n        grade++; //小写\n      }\n\n      if (/[A-Z]/.test(v)) {\n        grade++; //大写\n      }\n\n      if (/\\W/.test(v)) {\n        grade++; //特殊字符\n      }\n\n      if (v.length >= 10) {\n        grade++;\n      }\n      this.grade = grade;\n      return grade;\n    },\n    strengthChange() {\n      if (!this.currentValue) {\n        this.tipStyle = \"password-tip-none\";\n        this.strength = \"无\";\n        this.strengthValue = 0;\n        return;\n      }\n      let grade = this.checkStrengthValue(this.currentValue);\n      if (grade <= 1) {\n        this.progressStatus = \"wrong\";\n        this.tipStyle = \"password-tip-weak\";\n        this.strength = \"弱\";\n        this.strengthValue = 33;\n      } else if (grade >= 2 && grade <= 4) {\n        this.progressStatus = \"normal\";\n        this.tipStyle = \"password-tip-middle\";\n        this.strength = \"中\";\n        this.strengthValue = 66;\n      } else {\n        this.progressStatus = \"success\";\n        this.tipStyle = \"password-tip-strong\";\n        this.strength = \"强\";\n        this.strengthValue = 100;\n      }\n    },\n    handleChange(v) {\n      this.strengthChange();\n      this.$emit(\"input\", this.currentValue);\n      this.$emit(\"on-change\", this.currentValue, this.grade, this.strength);\n    },\n    setCurrentValue(value) {\n      if (value === this.currentValue) {\n        return;\n      }\n      this.currentValue = value;\n      this.strengthChange();\n      this.$emit(\"on-change\", this.currentValue, this.grade, this.strength);\n    }\n  },\n  watch: {\n    value(val) {\n      this.setCurrentValue(val);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}