{"ast":null,"code":"import { changePass } from \"./api.js\";\nimport SetPassword from \"@/views/template/set-password\";\nexport default {\n  name: \"change_pass\",\n  components: {\n    SetPassword\n  },\n  data() {\n    const valideRePassword = (rule, value, callback) => {\n      if (value !== this.editPasswordForm.newPass) {\n        callback(new Error(\"两次输入密码不一致\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      savePassLoading: false,\n      editPasswordForm: {\n        oldPass: \"\",\n        newPass: \"\",\n        rePass: \"\"\n      },\n      strength: \"\",\n      passwordValidate: {\n        oldPass: [{\n          required: true,\n          message: \"请输入原密码\",\n          trigger: \"blur\"\n        }],\n        newPass: [{\n          required: true,\n          message: \"请输入新密码\",\n          trigger: \"blur\"\n        }, {\n          min: 6,\n          message: \"请至少输入6个字符\",\n          trigger: \"blur\"\n        }, {\n          max: 32,\n          message: \"最多输入32个字符\",\n          trigger: \"blur\"\n        }],\n        rePass: [{\n          required: true,\n          message: \"请再次输入新密码\",\n          trigger: \"blur\"\n        }, {\n          validator: valideRePassword,\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    changeInputPass(v, grade, strength) {\n      this.strength = strength;\n    },\n    saveEditPass() {\n      let params = {\n        password: this.editPasswordForm.oldPass,\n        newPass: this.editPasswordForm.newPass,\n        passStrength: this.strength\n      };\n      this.$refs[\"editPasswordForm\"].validate(valid => {\n        if (valid) {\n          this.savePassLoading = true;\n          changePass(params).then(res => {\n            this.savePassLoading = false;\n            if (res.success) {\n              this.$Modal.success({\n                title: \"修改密码成功\",\n                content: \"修改密码成功，需重新登录\",\n                onOk: () => {\n                  this.$store.commit(\"logout\", this);\n                  this.$store.commit(\"clearOpenedSubmenu\");\n                  this.$router.push({\n                    name: \"login\"\n                  });\n                }\n              });\n            }\n          });\n        }\n      });\n    },\n    cancelEditPass() {\n      this.$store.commit(\"removeTag\", \"password\");\n      localStorage.pageOpenedList = JSON.stringify(this.$store.state.app.pageOpenedList);\n      let lastPageName = \"\";\n      let length = this.$store.state.app.pageOpenedList.length;\n      if (length > 1) {\n        lastPageName = this.$store.state.app.pageOpenedList[length - 1].name;\n      } else {\n        lastPageName = this.$store.state.app.pageOpenedList[0].name;\n      }\n      this.$router.push({\n        name: lastPageName\n      });\n    }\n  },\n  mounted() {}\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}