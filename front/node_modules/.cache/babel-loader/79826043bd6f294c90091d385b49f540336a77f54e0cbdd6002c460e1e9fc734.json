{"ast":null,"code":"import sidebarMenu from \"./components/sidebarMenu.vue\";\nimport sidebarMenuShrink from \"./components/sidebarMenuShrink.vue\";\nimport util from \"@/libs/util\";\nexport default {\n  name: \"shrinkableMenu\",\n  components: {\n    sidebarMenu,\n    sidebarMenuShrink\n  },\n  props: {\n    shrink: {\n      type: Boolean,\n      default: false\n    },\n    menuList: {\n      type: Array,\n      required: true\n    },\n    theme: {\n      type: String,\n      default: \"dark\",\n      validator(val) {\n        return util.oneOf(val, [\"dark\", \"light\"]);\n      }\n    },\n    beforePush: {\n      type: Function\n    },\n    openNames: {\n      type: Array\n    }\n  },\n  computed: {\n    bgColor() {\n      return \"#cdb9e2\";\n    },\n    shrinkIconColor() {\n      return this.theme == \"dark\" ? \"#fff\" : \"#515a6e\";\n    }\n  },\n  methods: {\n    handleChange(name) {\n      let willpush = true;\n      if (this.beforePush !== undefined) {\n        if (!this.beforePush(name)) {\n          willpush = false;\n        }\n      }\n      if (willpush) {\n        this.$router.push({\n          name: name\n        });\n      }\n      this.$emit(\"on-change\", name);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}