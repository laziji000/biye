{"ast":null,"code":"import { initDepartment, addDepartment, editDepartment, deleteDepartment, searchDepartment, getUserByDepartmentId, getMyUserListData } from \"./api.js\";\nexport default {\n  name: \"department-manage\",\n  data() {\n    return {\n      userLoading: true,\n      searchForm: {\n        pageNumber: 1,\n        pageSize: 10,\n        sort: \"createTime\",\n        order: \"desc\",\n        departmentId: \"\"\n      },\n      userData: [],\n      userTotal: 0,\n      selectList: [],\n      selectCount: 0,\n      selectRow: {},\n      loading: true,\n      maxHeight: \"500px\",\n      strict: true,\n      userLoading: false,\n      loadingEdit: true,\n      addOrEditDepartmentModal: false,\n      selectList: [],\n      selectCount: 0,\n      showParent: false,\n      modalTitle: \"\",\n      editTitle: \"\",\n      searchKey: \"\",\n      form: {\n        id: \"\",\n        title: \"\",\n        parentId: \"\",\n        parentTitle: \"\",\n        sortOrder: 0,\n        status: 0\n      },\n      formAdd: {},\n      formValidate: {\n        title: [{\n          required: true,\n          message: \"名称不能为空\",\n          trigger: \"blur\"\n        }],\n        sortOrder: [{\n          required: true,\n          type: \"number\",\n          message: \"排序值不能为空\",\n          trigger: \"blur\"\n        }]\n      },\n      submitLoading: false,\n      data: [],\n      dataEdit: [],\n      users: [],\n      userColumns: [{\n        type: \"selection\",\n        width: 60,\n        align: \"center\",\n        fixed: \"left\"\n      }, {\n        type: \"index\",\n        width: 60,\n        align: \"center\",\n        fixed: \"left\"\n      }, {\n        title: \"用户名\",\n        key: \"nickname\",\n        minWidth: 125,\n        sortable: true,\n        fixed: \"left\"\n      }, {\n        title: \"登录账号\",\n        key: \"username\",\n        minWidth: 125,\n        sortable: true\n      }, {\n        title: \"头像\",\n        key: \"avatar\",\n        width: 80,\n        align: \"center\",\n        render: (h, params) => {\n          return h(\"Avatar\", {\n            props: {\n              src: params.row.avatar\n            }\n          });\n        }\n      }, {\n        title: \"所属部门\",\n        key: \"departmentTitle\",\n        minWidth: 120\n      }, {\n        title: \"手机\",\n        key: \"mobile\",\n        minWidth: 125,\n        sortable: true\n      }, {\n        title: \"邮箱\",\n        key: \"email\",\n        minWidth: 180,\n        sortable: true\n      }, {\n        title: \"性别\",\n        key: \"sex\",\n        width: 70,\n        align: \"center\"\n      }, {\n        title: \"类型\",\n        key: \"type\",\n        align: \"center\",\n        width: 100,\n        render: (h, params) => {\n          if (params.row.type == 1) {\n            return h(\"div\", [h(\"Tag\", {\n              props: {\n                color: \"magenta\",\n                size: \"medium\"\n              }\n            }, \"管理员\")]);\n          } else {\n            return h(\"div\", [h(\"Tag\", {\n              props: {\n                color: \"blue\",\n                size: \"default\"\n              }\n            }, \"用户\")]);\n          }\n        }\n      }, {\n        title: \"状态\",\n        key: \"status\",\n        align: \"center\",\n        width: 110,\n        render: (h, params) => {\n          return h(\"div\", [h(\"Tag\", {\n            props: {\n              color: params.row.status == 0 ? \"green\" : \"red\",\n              size: \"medium\"\n            }\n          }, params.row.status == 0 ? \"启用\" : \"禁用\")]);\n        }\n      }]\n    };\n  },\n  methods: {\n    init() {\n      this.getParentList();\n      this.getParentListEdit();\n      this.getUserDataList();\n    },\n    getUserDataList() {\n      var that = this;\n      that.userLoading = true;\n      getMyUserListData(that.searchForm).then(res => {\n        that.userLoading = false;\n        if (res.success) {\n          that.userData = res.result.records;\n          that.userTotal = res.result.total;\n        }\n      });\n    },\n    getParentList() {\n      this.loading = true;\n      initDepartment().then(res => {\n        this.loading = false;\n        if (res.success) {\n          res.result.forEach(function (e) {\n            if (e.isParent) {\n              e.loading = false;\n              e.children = [];\n              e._loading = false;\n            }\n          });\n          this.data = res.result;\n        }\n      });\n    },\n    getParentListEdit() {\n      this.loadingEdit = true;\n      initDepartment().then(res => {\n        this.loadingEdit = false;\n        if (res.success) {\n          res.result.forEach(function (e) {\n            if (e.isParent) {\n              e.loading = false;\n              e.children = [];\n            }\n          });\n          let first = {\n            id: \"0\",\n            title: \"一级部门\"\n          };\n          res.result.unshift(first);\n          this.dataEdit = res.result;\n        }\n      });\n    },\n    loadData(item, callback) {\n      initDepartment({\n        parentId: item.id\n      }).then(res => {\n        if (res.success) {\n          res.result.forEach(function (e) {\n            if (e.isParent) {\n              e.loading = false;\n              e.children = [];\n              e._loading = false;\n            }\n          });\n          callback(res.result);\n        }\n      });\n    },\n    search() {\n      if (this.searchKey) {\n        this.loading = true;\n        searchDepartment({\n          title: this.searchKey\n        }).then(res => {\n          this.loading = false;\n          if (res.success) {\n            this.data = res.result;\n          }\n        });\n      } else {\n        this.getParentList();\n      }\n    },\n    excelData() {\n      this.$refs.table.exportCsv({\n        filename: \"部门用户导出结果\"\n      });\n    },\n    selectTree(v) {\n      if (v.length > 0) {\n        for (let attr in v[0]) {\n          if (v[0][attr] == null) {\n            v[0][attr] = \"\";\n          }\n        }\n        let str = JSON.stringify(v[0]);\n        let data = JSON.parse(str);\n        this.editTitle = data.title;\n        this.userLoading = true;\n        getUserByDepartmentId({\n          departmentId: data.id\n        }).then(res => {\n          this.userLoading = false;\n          if (res.success) {\n            this.users = res.result;\n            this.form = data;\n          }\n        });\n        this.searchForm.departmentId = v[0].id;\n        this.getUserDataList();\n      } else {\n        this.cancelEdit();\n        this.searchForm.departmentId = \"\";\n        this.getUserDataList();\n      }\n    },\n    cancelEdit() {\n      let data = this.$refs.tree.getSelectedNodes()[0];\n      if (data) {\n        data.selected = false;\n      }\n      this.$refs.form.resetFields();\n      delete this.form.id;\n      this.editTitle = \"\";\n    },\n    selectTreeEdit(v) {\n      if (v.length > 0) {\n        for (let attr in v[0]) {\n          if (v[0][attr] == null) {\n            v[0][attr] = \"\";\n          }\n        }\n        let str = JSON.stringify(v[0]);\n        let data = JSON.parse(str);\n        this.form.parentId = data.id;\n        this.form.parentTitle = data.title;\n      }\n    },\n    handleReset() {\n      this.$refs.form.resetFields();\n      this.form.status = 0;\n    },\n    showSelect(e) {\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    submitEdit() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          if (!this.form.id) {\n            this.$Message.warning(\"请先点击选择要修改的部门\");\n            return;\n          }\n          this.submitLoading = true;\n          editDepartment(this.form).then(res => {\n            this.submitLoading = false;\n            if (res.success) {\n              this.$Message.success(\"编辑成功\");\n              this.init();\n              this.addOrEditDepartmentModal = false;\n            }\n          });\n        }\n      });\n    },\n    submitAdd() {\n      this.$refs.formAdd.validate(valid => {\n        if (valid) {\n          this.submitLoading = true;\n          addDepartment(this.formAdd).then(res => {\n            this.submitLoading = false;\n            if (res.success) {\n              this.$Message.success(\"添加成功\");\n              this.init();\n              this.addOrEditDepartmentModal = false;\n            }\n          });\n        }\n      });\n    },\n    tableAdd(v) {\n      this.form = v;\n      this.add();\n    },\n    add() {\n      if (this.form.id == \"\" || this.form.id == null) {\n        this.addRoot();\n        return;\n      }\n      this.modalTitle = \"添加子部门\";\n      this.showParent = true;\n      this.formAdd = {\n        parentId: this.form.id,\n        sortOrder: 0,\n        status: 0\n      };\n      this.addOrEditDepartmentModal = true;\n    },\n    addRoot() {\n      this.modalTitle = \"添加一级部门\";\n      this.showParent = false;\n      this.formAdd = {\n        parentId: 0,\n        sortOrder: 0,\n        status: 0\n      };\n      this.addOrEditDepartmentModal = true;\n    },\n    changeSelect(v) {\n      this.selectCount = v.length;\n      this.selectList = v;\n    },\n    remove(v) {\n      this.selectCount = 1;\n      this.selectList.push(v);\n      this.delAll();\n    },\n    delAll() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未勾选要删除的数据\");\n        return;\n      }\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的部门?\",\n        loading: true,\n        onOk: () => {\n          let ids = \"\";\n          this.selectList.forEach(function (e) {\n            ids += e.id + \",\";\n          });\n          ids = ids.substring(0, ids.length - 1);\n          deleteDepartment({\n            ids: ids\n          }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"删除成功\");\n              this.selectList = [];\n              this.selectCount = 0;\n              this.cancelEdit();\n              this.init();\n            }\n          });\n        }\n      });\n    },\n    rowClick(row, index) {\n      this.selectRow = row;\n    },\n    rowClassName(row, index) {\n      if (row.id == this.selectRow.id) {\n        return \"rowClassNameColor\";\n      }\n      return \"\";\n    }\n  },\n  mounted() {\n    let height = document.documentElement.clientHeight;\n    this.maxHeight = Number(height - 287) + \"px\";\n    this.init();\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}