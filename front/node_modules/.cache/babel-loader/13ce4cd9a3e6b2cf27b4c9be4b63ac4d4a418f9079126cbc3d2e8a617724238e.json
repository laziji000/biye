{"ast":null,"code":"import \"viewerjs/dist/viewer.css\";\nimport Viewer from \"viewerjs\";\nimport { uploadFile } from \"@/api/index\";\nimport vuedraggable from \"vuedraggable\";\nexport default {\n  name: \"uploadPicThumb\",\n  components: {\n    vuedraggable\n  },\n  props: {\n    value: {\n      type: null\n    },\n    draggable: {\n      type: Boolean,\n      default: true\n    },\n    multiple: {\n      type: Boolean,\n      default: true\n    },\n    maxSize: {\n      type: Number,\n      default: 5\n    },\n    limit: {\n      type: Number,\n      default: 10\n    },\n    width: {\n      type: String,\n      default: \"60px\"\n    },\n    height: {\n      type: String,\n      default: \"60px\"\n    },\n    accept: {\n      type: String,\n      default: \".jpg, .jpeg, .png, .gif\"\n    }\n  },\n  computed: {\n    format() {\n      if (this.accept) {\n        let format = [];\n        this.accept.split(\",\").forEach(e => {\n          format.push(e.replace(\".\", \"\").replace(\" \", \"\"));\n        });\n        return format;\n      } else {\n        return [];\n      }\n    }\n  },\n  data() {\n    return {\n      accessToken: {},\n      uploadFileUrl: uploadFile,\n      uploadList: []\n    };\n  },\n  methods: {\n    onEnd() {\n      this.returnValue();\n    },\n    init() {\n      this.setData(this.value, true);\n      this.accessToken = {\n        accessToken: this.getStore(\"accessToken\")\n      };\n    },\n    handleView(v, i) {\n      let image = new Image();\n      image.src = v;\n      let viewer = new Viewer(image, {\n        hidden: function () {\n          viewer.destroy();\n        }\n      });\n      viewer.show();\n    },\n    handleRemove(file) {\n      const uploadList = this.uploadList;\n      this.uploadList.splice(uploadList.indexOf(file), 1);\n      this.returnValue();\n    },\n    handleSuccess(res, file) {\n      if (res.success) {\n        file.url = res.result;\n        // 单张图片处理\n        if (!this.multiple && this.uploadList.length > 0) {\n          // 删除第一张\n          this.uploadList.splice(0, 1);\n        }\n        this.uploadList.push(file);\n        // 返回组件值\n        this.returnValue();\n      } else {\n        this.$Message.error(res.message);\n      }\n    },\n    handleError(error, file, fileList) {\n      this.$Message.error(error.toString());\n    },\n    handleFormatError(file) {\n      this.$Notice.warning({\n        title: \"不支持的文件格式\",\n        desc: \"所选文件‘ \" + file.name + \" ’格式不正确, 请选择 \" + this.accept + \" 图片格式文件\"\n      });\n    },\n    handleMaxSize(file) {\n      this.$Notice.warning({\n        title: \"文件大小过大\",\n        desc: \"所选文件‘ \" + file.name + \" ’大小过大, 不得超过 \" + this.maxSize + \"M.\"\n      });\n    },\n    handleBeforeUpload() {\n      if (this.multiple && this.uploadList.length >= this.limit) {\n        this.$Message.warning(\"最多只能上传\" + this.limit + \"张图片\");\n        return false;\n      }\n      return true;\n    },\n    returnValue() {\n      if (!this.uploadList || this.uploadList.length < 1) {\n        if (!this.multiple) {\n          this.$emit(\"input\", \"\");\n          this.$emit(\"on-change\", \"\");\n        } else {\n          this.$emit(\"input\", []);\n          this.$emit(\"on-change\", []);\n        }\n        return;\n      }\n      if (!this.multiple) {\n        // 单张\n        let v = this.uploadList[0].url;\n        this.$emit(\"input\", v);\n        this.$emit(\"on-change\", v);\n      } else {\n        let v = [];\n        this.uploadList.forEach(e => {\n          v.push(e.url);\n        });\n        this.$emit(\"input\", v);\n        this.$emit(\"on-change\", v);\n      }\n    },\n    setData(v, init) {\n      if (typeof v == \"string\") {\n        // 单张\n        if (this.multiple) {\n          this.$Message.warning(\"多张上传仅支持数组数据类型\");\n          return;\n        }\n        if (!v) {\n          return;\n        }\n        this.uploadList = [];\n        let item = {\n          url: v,\n          status: \"finished\"\n        };\n        this.uploadList.push(item);\n        this.$emit(\"on-change\", v);\n      } else if (typeof v == \"object\") {\n        // 多张\n        if (!this.multiple) {\n          this.$Message.warning(\"单张上传仅支持字符串数据类型\");\n          return;\n        }\n        this.uploadList = [];\n        if (v.length > this.limit) {\n          for (let i = 0; i < this.limit; i++) {\n            let item = {\n              url: v[i],\n              status: \"finished\"\n            };\n            this.uploadList.push(item);\n          }\n          this.$emit(\"on-change\", v.slice(0, this.limit));\n          if (init) {\n            this.$emit(\"input\", v.slice(0, this.limit));\n          }\n          this.$Message.warning(\"最多只能上传\" + this.limit + \"张图片\");\n        } else {\n          v.forEach(e => {\n            let item = {\n              url: e,\n              status: \"finished\"\n            };\n            this.uploadList.push(item);\n          });\n          this.$emit(\"on-change\", v);\n        }\n      }\n    }\n  },\n  watch: {\n    value(val) {\n      this.setData(val);\n    }\n  },\n  mounted() {\n    this.init();\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}