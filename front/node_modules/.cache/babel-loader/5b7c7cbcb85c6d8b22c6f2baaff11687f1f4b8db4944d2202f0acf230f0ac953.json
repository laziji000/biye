{"ast":null,"code":"var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c('div', {\n    staticClass: \"user-edit\"\n  }, [_c('Modal', {\n    attrs: {\n      \"title\": _vm.title,\n      \"width\": \"90\",\n      \"draggable\": \"\",\n      \"mask-closable\": _vm.type == '0',\n      \"ok-text\": \"确认提交\"\n    },\n    on: {\n      \"on-ok\": _vm.submit\n    },\n    model: {\n      value: _vm.visible,\n      callback: function ($$v) {\n        _vm.visible = $$v;\n      },\n      expression: \"visible\"\n    }\n  }, [_c('Row', {\n    attrs: {\n      \"gutter\": 16,\n      \"justify\": \"center\"\n    }\n  }, [_c('div', {\n    staticClass: \"info-title\"\n  }, [_c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.type != '2',\n      expression: \"type!='2'\"\n    }]\n  }, [_vm._v(\"登录账号\" + _vm._s(_vm.form.username) + \"（唯一标识\" + _vm._s(_vm.form.id) + \"） \")]), _c('Icon', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.form.status == -1,\n      expression: \"form.status==-1\"\n    }],\n    staticStyle: {\n      \"margin-left\": \"10px\",\n      \"cursor\": \"pointer\"\n    },\n    attrs: {\n      \"type\": \"md-lock\",\n      \"size\": \"18\"\n    }\n  })], 1)]), _c('Form', {\n    ref: \"form\",\n    attrs: {\n      \"model\": _vm.form,\n      \"rules\": _vm.formValidate,\n      \"label-position\": \"top\"\n    }\n  }, [_vm.type == '2' ? _c('Row', {\n    attrs: {\n      \"gutter\": 16\n    }\n  }, [_c('Col', {\n    attrs: {\n      \"span\": \"12\"\n    }\n  }, [_c('FormItem', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"label\": \"登录账号\",\n      \"prop\": \"username\"\n    }\n  }, [_c('Input', {\n    attrs: {\n      \"autocomplete\": \"off\",\n      \"maxlength\": 16\n    },\n    model: {\n      value: _vm.form.username,\n      callback: function ($$v) {\n        _vm.$set(_vm.form, \"username\", $$v);\n      },\n      expression: \"form.username\"\n    }\n  })], 1)], 1), _c('Col', {\n    attrs: {\n      \"span\": \"12\"\n    }\n  }, [_c('FormItem', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"label\": \"密码\",\n      \"prop\": \"password\"\n    }\n  }, [_c('SetPassword', {\n    on: {\n      \"on-change\": _vm.changePass\n    },\n    model: {\n      value: _vm.form.password,\n      callback: function ($$v) {\n        _vm.$set(_vm.form, \"password\", $$v);\n      },\n      expression: \"form.password\"\n    }\n  })], 1)], 1)], 1) : _vm._e(), _c('Row', {\n    attrs: {\n      \"gutter\": 16\n    }\n  }, [_c('Col', {\n    attrs: {\n      \"span\": \"12\"\n    }\n  }, [_c('FormItem', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"label\": \"用户名\",\n      \"prop\": \"nickname\"\n    }\n  }, [_c('Input', {\n    model: {\n      value: _vm.form.nickname,\n      callback: function ($$v) {\n        _vm.$set(_vm.form, \"nickname\", $$v);\n      },\n      expression: \"form.nickname\"\n    }\n  })], 1)], 1), _c('Col', {\n    attrs: {\n      \"span\": \"12\"\n    }\n  }, [_c('FormItem', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"label\": \"邮箱\",\n      \"prop\": \"email\"\n    }\n  }, [_c('Input', {\n    model: {\n      value: _vm.form.email,\n      callback: function ($$v) {\n        _vm.$set(_vm.form, \"email\", $$v);\n      },\n      expression: \"form.email\"\n    }\n  })], 1)], 1)], 1), _c('Row', {\n    attrs: {\n      \"gutter\": 16\n    }\n  }, [_c('Col', {\n    attrs: {\n      \"span\": \"12\"\n    }\n  }, [_c('FormItem', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"label\": \"手机号\",\n      \"prop\": \"mobile\"\n    }\n  }, [_c('Input', {\n    model: {\n      value: _vm.form.mobile,\n      callback: function ($$v) {\n        _vm.$set(_vm.form, \"mobile\", $$v);\n      },\n      expression: \"form.mobile\"\n    }\n  })], 1)], 1), _c('Col', {\n    attrs: {\n      \"span\": \"12\"\n    }\n  }, [_c('FormItem', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"label\": \"性别\"\n    }\n  }, [_c('dict', {\n    attrs: {\n      \"dict\": \"sex\",\n      \"transfer\": \"\",\n      \"clearable\": \"\",\n      \"placeholder\": \"选择性别\"\n    },\n    model: {\n      value: _vm.form.sex,\n      callback: function ($$v) {\n        _vm.$set(_vm.form, \"sex\", $$v);\n      },\n      expression: \"form.sex\"\n    }\n  })], 1)], 1)], 1), _c('Row', {\n    attrs: {\n      \"gutter\": 16\n    }\n  }, [_c('Col', {\n    attrs: {\n      \"span\": \"12\"\n    }\n  }, [_c('FormItem', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"label\": \"所属部门\"\n    }\n  }, [_c('department-tree-choose', {\n    ref: \"depTree\",\n    on: {\n      \"on-change\": _vm.handleSelectDepTree\n    }\n  })], 1)], 1), _c('Col', {\n    attrs: {\n      \"span\": \"12\"\n    }\n  }, [_c('FormItem', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"label\": \"用户类型\"\n    }\n  }, [_c('Select', {\n    attrs: {\n      \"placeholder\": \"请选择用户类型\"\n    },\n    model: {\n      value: _vm.form.type,\n      callback: function ($$v) {\n        _vm.$set(_vm.form, \"type\", $$v);\n      },\n      expression: \"form.type\"\n    }\n  }, [_c('Option', {\n    attrs: {\n      \"value\": 0\n    }\n  }, [_vm._v(\"普通用户\")]), _c('Option', {\n    attrs: {\n      \"value\": 1\n    }\n  }, [_vm._v(\"管理员\")])], 1)], 1)], 1)], 1), _c('Row', {\n    attrs: {\n      \"gutter\": 16\n    }\n  }, [_c('Col', {\n    attrs: {\n      \"span\": \"12\"\n    }\n  }, [_c('FormItem', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"label\": \"头像\"\n    }\n  }, [_c('upload-pic-input', {\n    model: {\n      value: _vm.form.avatar,\n      callback: function ($$v) {\n        _vm.$set(_vm.form, \"avatar\", $$v);\n      },\n      expression: \"form.avatar\"\n    }\n  })], 1)], 1), _c('Col', {\n    attrs: {\n      \"span\": \"12\"\n    }\n  }, [_c('FormItem', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"label\": \"角色\",\n      \"prop\": \"roleIds\"\n    }\n  }, [_c('Select', {\n    attrs: {\n      \"multiple\": \"\"\n    },\n    model: {\n      value: _vm.form.roleIds,\n      callback: function ($$v) {\n        _vm.$set(_vm.form, \"roleIds\", $$v);\n      },\n      expression: \"form.roleIds\"\n    }\n  }, _vm._l(_vm.roleList, function (item) {\n    return _c('Option', {\n      key: item.id,\n      attrs: {\n        \"value\": item.id,\n        \"label\": item.name\n      }\n    }, [_c('span', {\n      staticStyle: {\n        \"margin-right\": \"10px\"\n      }\n    }, [_vm._v(_vm._s(item.name))]), _c('span', {\n      staticStyle: {\n        \"color\": \"#ccc\"\n      }\n    }, [_vm._v(_vm._s(item.description))])]);\n  }), 1)], 1)], 1)], 1)], 1)], 1)], 1);\n};\nvar staticRenderFns = [];\nexport { render, staticRenderFns };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}