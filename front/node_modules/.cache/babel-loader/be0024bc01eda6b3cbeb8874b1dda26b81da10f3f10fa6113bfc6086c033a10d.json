{"ast":null,"code":"import Vue from 'vue';\nimport ViewUI from 'view-design';\nimport Util from '../libs/util';\nimport VueRouter from 'vue-router';\nimport Cookies from 'js-cookie';\nimport { routers } from './router';\nVue.use(VueRouter);\nconst routerPush = VueRouter.prototype.push;\nVueRouter.prototype.push = function push(location) {\n  return routerPush.call(this, location).catch(error => error);\n};\nconst RouterConfig = {\n  // mode: 'history',\n  routes: routers\n};\nexport const router = new VueRouter(RouterConfig);\nrouter.beforeEach((to, from, next) => {\n  ViewUI.LoadingBar.start();\n  Util.title(to.meta.title);\n  var name = to.name;\n  if (Cookies.get('locking') == '1' && name !== 'locking') {\n    next({\n      replace: true,\n      name: 'locking'\n    });\n  } else if (Cookies.get('locking') == '0' && name == 'locking') {\n    next(false);\n  } else {\n    if (!Cookies.get('userInfo') && name != 'login' && name != 'regist') {\n      next({\n        name: 'login'\n      });\n    } else if (Cookies.get('userInfo') && name == 'login') {\n      Util.title();\n      next({\n        name: 'home_index'\n      });\n    } else {\n      Util.toDefaultPage([...routers], name, router, next);\n    }\n  }\n});\nrouter.afterEach(to => {\n  Util.openNewPage(router.app, to.name, to.params, to.query);\n  ViewUI.LoadingBar.finish();\n  window.scrollTo(0, 0);\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}