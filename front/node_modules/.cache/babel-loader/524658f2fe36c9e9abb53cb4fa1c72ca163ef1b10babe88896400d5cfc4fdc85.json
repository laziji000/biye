{"ast":null,"code":"import { getUserList, enableUser, disableUser, deleteUser, importUserData, resetUserPass } from \"./api.js\";\nimport departmentChoose from \"@/views/template/department-choose\";\nimport excel from \"@/libs/excel\";\nimport addEdit from \"./addEdit.vue\";\nimport dict from \"@/views/template/dict\";\nexport default {\n  name: \"user-manage\",\n  components: {\n    departmentChoose,\n    addEdit,\n    dict\n  },\n  data() {\n    return {\n      selected: [\"编号\", \"用户名\", \"登录账号\", \"头像\", \"所属部门\", \"手机\", \"邮箱\", \"性别\", \"类型\", \"状态\", \"创建时间\", \"操作\"],\n      showFilterPanelFlag: false,\n      usingTutorialsModal: false,\n      height: 510,\n      selectRow: {},\n      showUser: false,\n      showType: \"0\",\n      loading: true,\n      reading: false,\n      importLoading: false,\n      loadingExport: true,\n      exportModalVisible: false,\n      importModalVisible: false,\n      drop: false,\n      selectCount: 0,\n      selectList: [],\n      searchForm: {\n        nickname: \"\",\n        departmentId: \"\",\n        pageNumber: 1,\n        pageSize: 20,\n        sort: \"createTime\",\n        order: \"desc\"\n      },\n      form: {},\n      columns: [{\n        title: \"编号\",\n        type: \"index\",\n        width: 80,\n        align: \"center\",\n        fixed: \"left\"\n      }, {\n        title: \"用户名\",\n        key: \"nickname\",\n        minWidth: 150,\n        sortable: true,\n        fixed: \"left\"\n      }, {\n        title: \"登录账号\",\n        key: \"username\",\n        minWidth: 150,\n        sortable: true\n      }, {\n        title: \"头像\",\n        key: \"avatar\",\n        width: 80,\n        align: \"center\",\n        render: (h, params) => {\n          return h(\"Avatar\", {\n            props: {\n              src: params.row.avatar\n            }\n          });\n        }\n      }, {\n        title: \"所属部门\",\n        key: \"departmentTitle\",\n        minWidth: 120\n      }, {\n        title: \"手机\",\n        key: \"mobile\",\n        minWidth: 125,\n        sortable: true\n      }, {\n        title: \"邮箱\",\n        key: \"email\",\n        minWidth: 180,\n        sortable: true\n      }, {\n        title: \"性别\",\n        key: \"sex\",\n        width: 70,\n        align: \"center\"\n      }, {\n        title: \"类型\",\n        key: \"type\",\n        align: \"center\",\n        width: 100,\n        render: (h, params) => {\n          if (params.row.type == 1) {\n            return h(\"div\", [h(\"span\", {\n              style: {\n                color: \"#ff9900\"\n              }\n            }, \"管理员\")]);\n          } else {\n            return h(\"div\", [\"普通用户\"]);\n          }\n        }\n      }, {\n        title: \"状态\",\n        key: \"status\",\n        align: \"center\",\n        width: 110,\n        render: (h, params) => {\n          if (params.row.status == 0) {\n            return h(\"div\", [h(\"span\", {\n              style: {\n                color: \"#3CB371\"\n              }\n            }, \"正常启用\")]);\n          } else {\n            return h(\"div\", [h(\"span\", {\n              style: {\n                color: \"#ff9900\"\n              }\n            }, \"禁用\")]);\n          }\n        }\n      }, {\n        title: \"创建时间\",\n        key: \"createTime\",\n        sortable: true,\n        sortType: \"desc\",\n        width: 180\n      }, {\n        title: \"操作\",\n        key: \"action\",\n        width: 300,\n        align: \"center\",\n        fixed: \"right\",\n        render: (h, params) => {\n          var that = this;\n          return h(\"div\", [h(\"Button\", {\n            props: {\n              type: \"primary\",\n              size: \"small\",\n              ghost: true,\n              shape: \"circle\",\n              disabled: !(that.$route.meta.permTypes && that.$route.meta.permTypes.includes(\"edit\"))\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: () => {\n                this.edit(params.row);\n              }\n            }\n          }, \"编辑\"), h(\"Button\", {\n            props: {\n              type: \"warning\",\n              size: \"small\",\n              ghost: true,\n              shape: \"circle\"\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: () => {\n                this.resetPass(params.row);\n              }\n            }\n          }, \"重置密码\"), h(\"Button\", {\n            props: {\n              size: \"small\",\n              ghost: true,\n              type: params.row.status == 0 ? \"error\" : \"success\",\n              shape: \"circle\"\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: () => {\n                if (params.row.status == 0) {\n                  this.disable(params.row);\n                } else {\n                  this.enable(params.row);\n                }\n              }\n            }\n          }, params.row.status == 0 ? \"禁用\" : \"启用\"), h(\"Button\", {\n            props: {\n              type: \"error\",\n              size: \"small\",\n              ghost: true,\n              shape: \"circle\",\n              disabled: !(that.$route.meta.permTypes && that.$route.meta.permTypes.includes(\"delete\"))\n            },\n            on: {\n              click: () => {\n                this.remove(params.row);\n              }\n            }\n          }, \"删除\")]);\n        }\n      }],\n      filename: \"用户数据\",\n      importTableData: [],\n      importColumns: [],\n      uploadfile: {\n        name: \"\"\n      },\n      data: [],\n      total: 0\n    };\n  },\n  methods: {\n    init() {\n      this.getUserList();\n    },\n    excelData() {\n      this.$refs.table.exportCsv({\n        filename: \"导出结果\"\n      });\n    },\n    handleSelectDep(v) {\n      this.searchForm.departmentId = v;\n    },\n    changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getUserList();\n      this.clearSelectAll();\n    },\n    changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getUserList();\n    },\n    getUserList() {\n      this.loading = true;\n      getUserList(this.searchForm).then(res => {\n        this.loading = false;\n        if (res.success) {\n          this.data = res.result.records;\n          this.total = res.result.total;\n        }\n      });\n    },\n    handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 20;\n      this.getUserList();\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.$refs.dep.clearSelect();\n      this.searchForm.departmentId = \"\";\n      this.getUserList();\n    },\n    changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n      if (e.order == \"normal\") {\n        this.searchForm.order = \"\";\n      }\n      this.getUserList();\n    },\n    resetPass(e) {\n      this.$Modal.confirm({\n        title: \"确认重置\",\n        content: \"重置后密码为123456\",\n        loading: true,\n        onOk: () => {\n          resetUserPass({\n            ids: e.id\n          }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.clearSelectAll();\n              this.getUserList();\n            }\n          });\n        }\n      });\n    },\n    beforeUploadImport(file) {\n      this.uploadfile = file;\n      const fileExt = file.name.split(\".\").pop().toLocaleLowerCase();\n      if (fileExt == \"xlsx\" || fileExt == \"xls\") {\n        this.readFile(file);\n        this.file = file;\n      } else {\n        this.$Message.error(\"不是Excel文件\");\n      }\n      return false;\n    },\n    readFile(file) {\n      this.reading = true;\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onerror = e => {\n        this.reading = false;\n        this.$Message.error(\"文件读取出错\");\n      };\n      reader.onload = e => {\n        const data = e.target.result;\n        const {\n          header,\n          results\n        } = excel.read(data, \"array\");\n        const tableTitle = header.map(item => {\n          return {\n            title: item,\n            key: item,\n            minWidth: 100,\n            align: \"center\"\n          };\n        });\n        this.importTableData = results;\n        this.importColumns = tableTitle;\n        this.reading = false;\n        this.$Message.success(\"读取数据成功\");\n      };\n    },\n    clearImportData() {\n      this.importTableData = [];\n      this.importColumns = [];\n      this.uploadfile = {};\n    },\n    importData() {\n      this.importLoading = true;\n      importUserData(this.importTableData).then(res => {\n        this.importLoading = false;\n        if (res.success) {\n          this.importModalVisible = false;\n          this.getUserList();\n          this.$Modal.info({\n            title: \"导入结果\",\n            content: res.message\n          });\n        }\n      });\n    },\n    add() {\n      this.showType = \"2\";\n      this.showUser = true;\n    },\n    edit(v) {\n      for (let i in v) {\n        if (v[i] == null) {\n          v[i] = \"\";\n        }\n      }\n      let str = JSON.stringify(v);\n      let data = JSON.parse(str);\n      this.form = data;\n      this.showType = \"1\";\n      this.showUser = true;\n    },\n    enable(v) {\n      this.$Modal.confirm({\n        title: \"确认启用\",\n        content: \"启用用户 \" + v.username + \" ?\",\n        loading: true,\n        onOk: () => {\n          enableUser({\n            id: v.id\n          }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"启用成功\");\n              this.getUserList();\n            }\n          });\n        }\n      });\n    },\n    disable(v) {\n      this.$Modal.confirm({\n        title: \"确认禁用\",\n        content: \"禁用用户 \" + v.username + \" ?\",\n        loading: true,\n        onOk: () => {\n          disableUser({\n            id: v.id\n          }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"禁用成功\");\n              this.getUserList();\n            }\n          });\n        }\n      });\n    },\n    remove(v) {\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"删除用户 \" + v.username + \" ?\",\n        loading: true,\n        onOk: () => {\n          deleteUser({\n            ids: v.id\n          }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"删除成功\");\n              this.getUserList();\n            }\n          });\n        }\n      });\n    },\n    showSelect(e) {\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    rowClick(row, index) {\n      this.selectRow = row;\n    },\n    rowClassName(row, index) {\n      if (row.id == this.selectRow.id) {\n        return \"rowClassNameColor\";\n      }\n      return \"\";\n    }\n  },\n  mounted() {\n    this.height = window.innerHeight - this.$refs.table.$el.offsetTop - 160;\n    this.init();\n    this.mycolumns = this.columns;\n    let showcolumns = [];\n    for (var i = 0; i < this.selected.length; i++) {\n      var item = this.selected[i];\n      for (var j = 0; j < this.columns.length; j++) {\n        if (this.columns[j].title == item) {\n          showcolumns.push(this.columns[j]);\n        }\n      }\n    }\n    this.columns = showcolumns;\n  },\n  watch: {\n    selected: function (newcolumns) {\n      let showcolumns = [];\n      for (var i = 0; i < this.mycolumns.length; i++) {\n        var item = this.mycolumns[i];\n        if (item.title == undefined) showcolumns.push(item);else if (newcolumns.includes(item.title)) showcolumns.push(item);\n      }\n      this.columns = showcolumns;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}