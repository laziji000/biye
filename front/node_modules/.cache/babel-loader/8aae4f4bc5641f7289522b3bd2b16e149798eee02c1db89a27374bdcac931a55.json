{"ast":null,"code":"import { addPermission, editPermission, deletePermission, searchPermission, getDictDataByType, getUserByPermission } from \"./api.js\";\nimport IconChoose from \"@/views/template/icon-choose\";\nimport util from \"@/libs/util.js\";\nexport default {\n  name: \"menu\",\n  components: {\n    IconChoose\n  },\n  data() {\n    return {\n      userByPermissionLoading: false,\n      loading: true,\n      strict: true,\n      maxHeight: 500,\n      menuModalVisible: false,\n      iconModalVisible: false,\n      selectList: [],\n      selectCount: 0,\n      showParent: false,\n      searchKey: \"\",\n      parentTitle: \"\",\n      editTitle: \"\",\n      modalTitle: \"\",\n      form: {\n        id: \"\",\n        title: \"\",\n        name: \"\",\n        icon: \"\",\n        path: \"\",\n        component: \"\",\n        parentId: \"\",\n        buttonType: \"\",\n        type: 0,\n        sortOrder: 0,\n        level: 0,\n        status: 0,\n        url: \"\"\n      },\n      formAdd: {\n        buttonType: \"\"\n      },\n      formValidate: {\n        title: [{\n          required: true,\n          message: \"菜单名称不能为空\",\n          trigger: \"blur\"\n        }],\n        name: [{\n          required: true,\n          message: \"路由英文名不能为空\",\n          trigger: \"blur\"\n        }],\n        icon: [{\n          required: true,\n          message: \"图标不能为空\",\n          trigger: \"click\"\n        }],\n        path: [{\n          required: true,\n          message: \"路径不能为空\",\n          trigger: \"blur\"\n        }],\n        component: [{\n          required: true,\n          message: \"对应位置不能为空\",\n          trigger: \"blur\"\n        }],\n        sortOrder: [{\n          required: true,\n          type: \"number\",\n          message: \"排序值不能为空\",\n          trigger: \"blur\"\n        }]\n      },\n      submitLoading: false,\n      data: [],\n      dictPermissions: [],\n      userByPermissionList: [],\n      userByPermissionColumns: [{\n        title: \"用户名\",\n        key: \"userName\",\n        minWidth: 120,\n        tooltip: true,\n        sortable: false\n      }, {\n        title: \"对应角色\",\n        key: \"roleStr\",\n        minWidth: 200,\n        tooltip: true,\n        sortable: false\n      }, {\n        title: \"登录账号\",\n        key: \"code\",\n        minWidth: 120,\n        tooltip: true,\n        sortable: false\n      }, {\n        title: \"用户手机\",\n        key: \"mobile\",\n        minWidth: 120,\n        tooltip: true,\n        sortable: false\n      }, {\n        title: \"用户标识\",\n        key: \"userId\",\n        minWidth: 120,\n        tooltip: true,\n        sortable: false\n      }]\n    };\n  },\n  methods: {\n    init() {\n      this.getPermissionList();\n      this.getDictPermissions();\n    },\n    changeFormPath() {\n      this.form.name = this.form.path;\n    },\n    changeFormName() {\n      this.form.path = this.form.name;\n    },\n    getDictPermissions() {\n      getDictDataByType(\"permission_type\").then(res => {\n        if (res.success) {\n          this.dictPermissions = res.result;\n        }\n      });\n    },\n    renderContent(h, {\n      root,\n      node,\n      data\n    }) {\n      let icon = \"\";\n      if (data.level == 0) {\n        icon = \"ios-navigate\";\n      } else if (data.level == 1) {\n        icon = \"md-list-box\";\n      } else if (data.level == 2) {\n        icon = \"md-list\";\n      } else if (data.level == 3) {\n        icon = \"md-radio-button-on\";\n      } else {\n        icon = \"md-radio-button-off\";\n      }\n      return h(\"span\", [h(\"span\", [h(\"Icon\", {\n        props: {\n          type: icon,\n          size: \"16\"\n        },\n        style: {\n          \"margin-right\": \"8px\",\n          \"margin-bottom\": \"3px\"\n        }\n      }), h(\"span\", data.title)])]);\n    },\n    getPermissionList() {\n      this.loading = true;\n      this.getRequest(\"/permission/getAllList\").then(res => {\n        this.loading = false;\n        if (res.success) {\n          this.data = res.result;\n        }\n      });\n    },\n    search() {\n      if (this.searchKey) {\n        this.loading = true;\n        searchPermission({\n          title: this.searchKey\n        }).then(res => {\n          this.loading = false;\n          if (res.success) {\n            this.data = res.result;\n          }\n        });\n      } else {\n        this.getPermissionList();\n      }\n    },\n    selectTree(v) {\n      if (v.length > 0) {\n        // 转换null为\"\"\n        for (let attr in v[0]) {\n          if (v[0][attr] == null) {\n            v[0][attr] = \"\";\n          }\n        }\n        let str = JSON.stringify(v[0]);\n        let menu = JSON.parse(str);\n        this.form = menu;\n        this.editTitle = menu.title;\n        this.getUserByPermission();\n      } else {\n        this.cancelEdit();\n        this.userByPermissionList = [];\n      }\n    },\n    getUserByPermission() {\n      var that = this;\n      that.userByPermissionLoading = true;\n      getUserByPermission({\n        permissionId: that.form.id\n      }).then(res => {\n        that.userByPermissionLoading = false;\n        if (res.success) {\n          that.userByPermissionList = res.result;\n        }\n      });\n    },\n    cancelEdit() {\n      let data = this.$refs.tree.getSelectedNodes()[0];\n      if (data) {\n        data.selected = false;\n      }\n      this.$refs.form.resetFields();\n      this.form.id = \"\";\n      this.editTitle = \"\";\n    },\n    handleReset() {\n      let type = this.form.type;\n      this.$refs.form.resetFields();\n      this.form.icon = \"\";\n      this.form.component = \"\";\n      this.form.type = type;\n    },\n    submitEdit() {\n      if (!this.form.id) {\n        this.$Message.warning(\"请先点击选择要修改的菜单节点\");\n        return;\n      }\n      this.submitLoading = true;\n      if (this.form.sortOrder == null) {\n        this.form.sortOrder = \"\";\n      }\n      if (this.form.buttonType == null) {\n        this.form.buttonType = \"\";\n      }\n      if (this.form.type == 1) {\n        this.form.name = \"\";\n        this.form.icon = \"\";\n        this.form.component = \"\";\n      }\n      delete this.form.updateTime;\n      delete this.form.children;\n      editPermission(this.form).then(res => {\n        this.submitLoading = false;\n        if (res.success) {\n          this.$Message.success(\"编辑成功\");\n          // 标记重新获取菜单数据\n          this.$store.commit(\"setAdded\", false);\n          util.initRouter(this);\n          this.init();\n          this.menuModalVisible = false;\n        }\n      });\n    },\n    submitAdd() {\n      this.$refs.formAdd.validate(valid => {\n        if (valid) {\n          this.submitLoading = true;\n          if (this.formAdd.type == 1) {\n            this.formAdd.name = \"\";\n            this.formAdd.icon = \"\";\n            this.formAdd.component = \"\";\n          }\n          addPermission(this.formAdd).then(res => {\n            this.submitLoading = false;\n            if (res.success) {\n              this.$Message.success(\"添加成功\");\n              this.$store.commit(\"setAdded\", false);\n              util.initRouter(this);\n              this.init();\n              this.menuModalVisible = false;\n            }\n          });\n        }\n      });\n    },\n    addMenu() {\n      if (!this.form.id) {\n        this.modalTitle = \"添加顶部菜单(可拖动)\";\n        this.showParent = false;\n        this.formAdd = {\n          type: -1,\n          level: 0,\n          sortOrder: 0,\n          status: 0\n        };\n        this.menuModalVisible = true;\n        return;\n      }\n      this.parentTitle = this.form.title;\n      this.modalTitle = \"添加子节点\";\n      this.showParent = true;\n      let type = 0;\n      if (this.form.level == 1) {\n        type = 0;\n      } else if (this.form.level == 2) {\n        type = 1;\n      } else if (this.form.level == 3) {\n        this.$Modal.warning({\n          title: \"抱歉，不能添加啦\",\n          content: \"仅支持2级菜单目录\"\n        });\n        return;\n      } else {\n        type = 0;\n      }\n      let component = \"\";\n      this.formAdd = {\n        icon: \"\",\n        type: type,\n        parentId: this.form.id,\n        level: Number(this.form.level) + 1,\n        sortOrder: 0,\n        buttonType: \"\",\n        status: 0\n      };\n      if (this.form.level == 0) {\n        this.formAdd.path = \"/\";\n        this.formAdd.component = \"Main\";\n      } else if (this.form.level == 2) {\n        this.formAdd.path = \"无\";\n      }\n      this.menuModalVisible = true;\n    },\n    changeSelect(v) {\n      this.selectCount = v.length;\n      this.selectList = v;\n    },\n    deletePermissionFx() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"请选择要删除的菜单\");\n        return;\n      }\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        loading: true,\n        onOk: () => {\n          let ids = \"\";\n          this.selectList.forEach(function (e) {\n            ids += e.id + \",\";\n          });\n          ids = ids.substring(0, ids.length - 1);\n          deletePermission({\n            ids: ids\n          }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"删除成功\");\n              this.$store.commit(\"setAdded\", false);\n              util.initRouter(this);\n              this.selectList = [];\n              this.selectCount = 0;\n              this.cancelEdit();\n              this.init();\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted() {\n    let height = document.documentElement.clientHeight;\n    this.maxHeight = Number(height - 260);\n    this.init();\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}